<templateSet group="MyTemplates">
  <template name="ClassBase" value="import android.os.Bundle&#10;import android.view.LayoutInflater&#10;import android.view.View&#10;import android.view.ViewGroup&#10;import $PACKAGE_NAME$.R&#10;import $PACKAGE_NAME$.base.BaseFragment&#10;&#10;class $FragmentName$Fragment : BaseFragment() {&#10;    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? {&#10;        return inflater.inflate(R.layout.fragment_$FragmentLayout$, container, false)&#10;    }&#10;    &#10;    override fun onActivityCreated(savedInstanceState: Bundle?) {&#10;        super.onActivityCreated(savedInstanceState)&#10;        init()&#10;    }&#10;&#10;    private fun init() {&#10;&#10;    }&#10;}" description="Fragment With Class" toReformat="true" toShortenFQNames="true">
    <variable name="PACKAGE_NAME" expression="kotlinPackageName()" defaultValue="" alwaysStopAt="true" />
    <variable name="FragmentName" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="true" />
    <variable name="FragmentLayout" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="ClassBaseRecyclerView" value="//after getting data it update the Side menu in recyclerView&#10;&#10;import android.os.Bundle&#10;import android.view.LayoutInflater&#10;import android.view.View&#10;import android.view.ViewGroup&#10;import $PACKAGE_NAME$.R&#10;import $PACKAGE_NAME$.base.BaseFragment&#10;&#10;class $FragmentName$Fragment : BaseFragment() {&#10;&#10;&#9;var mAdapter: $FragmentName$Adapter? = null&#10;&#9;private var mArrayList = ArrayList&lt;$ClassName$&gt;()&#10;&#10;    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? {&#10;        return inflater.inflate(R.layout.fragment_$FragmentName$, container, false)&#10;    }&#10;&#10;&#10;&#9;override fun onActivityCreated(savedInstanceState: Bundle?) {&#10;&#9;&#9;super.onActivityCreated(savedInstanceState)&#10;&#9;&#9;init()&#10;&#9;}&#10;&#9;&#10;&#9;private fun init() {&#10;&#9;&#9;initRecyclerView()&#10;&#9;}&#10;&#10;&#9;private fun initRecyclerView() {&#10;&#9;&#9;val layoutManager = LinearLayoutManager(this)&#10;&#9;&#9;$rv$.layoutManager = layoutManager&#10;&#9;&#9;mAdapter = $FragmentName$Adapter(this, mArrayList, object : $FragmentName$Adapter.ProductClickListener {&#10;&#9;&#9;&#9;override fun itemClick(position: Int) {&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;})&#10;&#9;&#9;$rv$.adapter = mAdapter&#10;&#9;&#9;mAdapter!!.notifyDataSetChanged()&#10;&#9;}&#10;}" description="Fragment With RecyclerView" toReformat="true" toShortenFQNames="true">
    <variable name="PACKAGE_NAME" expression="kotlinPackageName()" defaultValue="" alwaysStopAt="false" />
    <variable name="FragmentName" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="true" />
    <variable name="ClassName" expression="complete()" defaultValue="String" alwaysStopAt="true" />
    <variable name="rv" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="RecyclerViewWithAdapter" value="var mAdapter: $FragmentName$Adapter? = null&#10;private var $mArrayList$ = ArrayList&lt;$ClassName$&gt;()&#10;&#9;&#10;private fun initRecyclerView() {&#10;&#9;&#9;val layoutManager = LinearLayoutManager(context!!)&#10;&#9;&#9;$rv$.layoutManager = layoutManager&#10;&#9;&#9;mAdapter = $FragmentName$Adapter(context!!, $mArrayList$, object : $FragmentName$Adapter.ItemClickListener {&#10;&#9;&#9;&#9;override fun itemClick(position: Int) {&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;})&#10;&#9;&#9;$rv$.adapter = mAdapter&#10;&#9;&#9;mAdapter!!.notifyDataSetChanged()&#10;&#9;}&#10;}&#10;&#10;&#10;&#10;&#10;package $PACKAGE_NAME$&#10;&#10;import android.content.Context&#10;import android.view.LayoutInflater&#10;import android.view.View&#10;import android.view.ViewGroup&#10;import androidx.appcompat.widget.AppCompatButton&#10;import androidx.recyclerview.widget.RecyclerView&#10;import com.justcodenow.operrwork.R&#10;&#10;/**&#10; * Created by Abhin.&#10; */&#10;class $FragmentName$Adapter(val mContext: Context, var mList: List&lt;$ClassName$&gt;, var mItemClickListener: ItemClickListener) : RecyclerView.Adapter&lt;$FragmentName$Adapter.$FragmentName$AdapterViewHolder&gt;() {&#10;&#10;    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): $FragmentName$AdapterViewHolder {&#10;        val viewHolder = LayoutInflater.from(parent.context).inflate(R.layout.item_dashboard_menu, parent, false)&#10;        return $FragmentName$AdapterViewHolder(viewHolder)&#10;    }&#10;&#10;    override fun getItemCount(): Int {&#10;        return mList.size&#10;    }&#10;&#10;    override fun onBindViewHolder(holder: $FragmentName$AdapterViewHolder, position: Int) {&#10;        val mData = mList[position]&#10;        holder.btn.text = mData&#10;        holder.itemView.setOnClickListener {&#10;            mItemClickListener.itemClick(position)&#10;        }&#10;    }&#10;&#10;    class $FragmentName$AdapterViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {&#10;        val btn = itemView.findViewById&lt;AppCompatButton&gt;(R.id.btn_menus)!!&#10;    }&#10;&#10;    interface ItemClickListener {&#10;        fun itemClick(position: Int)&#10;    }&#10;}&#10;&#10;&#10;&#10;&#10;" description="Fragment With RecyclerView Adapter" toReformat="true" toShortenFQNames="true">
    <variable name="PACKAGE_NAME" expression="kotlinPackageName()" defaultValue="" alwaysStopAt="false" />
    <variable name="mArrayList" expression="completeSmart()" defaultValue="mArrayList" alwaysStopAt="false" />
    <variable name="FragmentName" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="true" />
    <variable name="ClassName" expression="completeSmart()" defaultValue="String" alwaysStopAt="true" />
    <variable name="rv" expression="completeSmart()" defaultValue="Rv" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="ClassBaseFragmentRecyclerViewWithAdapter" value="//after getting data it update the Side menu in recyclerView&#10;&#10;import android.os.Bundle&#10;import android.view.*&#10;import $PACKAGE_NAME$.R&#10;import $PACKAGE_NAME$.base.BaseFragment&#10;import androidx.recyclerview.widget.LinearLayoutManager&#10;&#10;class $FragmentName$Fragment : BaseFragment() {&#10;&#10;&#9;var mAdapter: $FragmentName$Adapter? = null&#10;&#9;private var mArrayList = ArrayList&lt;$ClassName$&gt;()&#10;&#10;    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? {&#10;        return inflater.inflate(R.layout.fragment_$FragmentLayout$, container, false)&#10;    }&#10;&#10;&#10;&#9;override fun onActivityCreated(savedInstanceState: Bundle?) {&#10;&#9;&#9;super.onActivityCreated(savedInstanceState)&#10;&#9;&#9;init()&#10;&#9;}&#10;&#9;&#10;&#9;private fun init() {&#10;&#9;&#9;initRecyclerView()&#10;&#9;}&#10;&#10;&#9;private fun initRecyclerView() {&#10;&#9;&#9;val layoutManager = LinearLayoutManager(this)&#10;&#9;&#9;$rv$.layoutManager = layoutManager&#10;&#9;&#9;mAdapter = $FragmentName$Adapter(this, mArrayList, object : $FragmentName$Adapter.ItemClickListener {&#10;&#9;&#9;&#9;override fun itemClick(position: Int) {&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;})&#10;&#9;&#9;$rv$.adapter = mAdapter&#10;&#9;&#9;mAdapter!!.notifyDataSetChanged()&#10;&#9;}&#10;}&#10;&#10;&#10;&#10;&#10;package $PACKAGE_NAME$&#10;&#10;import android.content.Context&#10;import android.view.LayoutInflater&#10;import android.view.View&#10;import android.view.ViewGroup&#10;import androidx.appcompat.widget.AppCompatButton&#10;import androidx.recyclerview.widget.RecyclerView&#10;import com.justcodenow.operrwork.R&#10;&#10;/**&#10; * Created by Abhin.&#10; */&#10;class $FragmentName$Adapter(val mContext: Context, var mList: List&lt;$ClassName$&gt;, var mItemClickListener: ItemClickListener) : RecyclerView.Adapter&lt;$FragmentName$Adapter.$FragmentName$AdapterViewHolder&gt;() {&#10;&#10;    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): $FragmentName$AdapterViewHolder {&#10;        val viewHolder = LayoutInflater.from(parent.context).inflate(R.layout.$layoutName$, parent, false)&#10;        return $FragmentName$AdapterViewHolder(viewHolder)&#10;    }&#10;&#10;    override fun getItemCount(): Int {&#10;        return mList.size&#10;    }&#10;&#10;    override fun onBindViewHolder(holder: $FragmentName$AdapterViewHolder, position: Int) {&#10;        val mData = mList[position]&#10;        holder.mName.text = mData&#10;        holder.itemView.setOnClickListener {&#10;            mItemClickListener.itemClick(position)&#10;        }&#10;    }&#10;&#10;    class $FragmentName$AdapterViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {&#10;        val mName = itemView.findViewById&lt;AppCompatTextView&gt;(R.id.$layoutTextView$)!!&#10;    }&#10;&#10;    interface ItemClickListener {&#10;        fun itemClick(position: Int)&#10;    }&#10;}&#10;&#10;&#10;&#10;&#10;" description="BaseFragment RecyclerView With Adapter" toReformat="true" toShortenFQNames="true">
    <variable name="PACKAGE_NAME" expression="kotlinPackageName()" defaultValue="" alwaysStopAt="true" />
    <variable name="FragmentName" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="true" />
    <variable name="ClassName" expression="complete()" defaultValue="String" alwaysStopAt="true" />
    <variable name="FragmentLayout" expression="complete()" defaultValue="fragment_" alwaysStopAt="true" />
    <variable name="rv" expression="complete()" defaultValue="Rv" alwaysStopAt="true" />
    <variable name="layoutName" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="layoutTextView" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="ClassBaseFragmentRecyclerviewWithFilter" value="//after getting data it update the Side menu in recyclerView&#10;&#10;import android.os.Bundle&#10;import android.view.*&#10;import androidx.appcompat.widget.SearchView&#10;import androidx.core.view.MenuItemCompat&#10;import android.view.inputmethod.EditorInfo&#10;import $PACKAGE_NAME$.R&#10;import $PACKAGE_NAME$.base.BaseFragment&#10;import androidx.recyclerview.widget.LinearLayoutManager&#10;import com.justcodenow.reportingapp.util.Constant&#10;&#10;class $FragmentName$Fragment : BaseFragment() {&#10;&#10;&#9;var mAdapter: $FragmentName$Adapter? = null&#10;&#9;private var mArrayList = ArrayList&lt;$ClassName$&gt;()&#10;&#10;    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? {&#10;        return inflater.inflate(R.layout.fragment_$FragmentLayout$, container, false)&#10;    }&#10;&#10;&#9;override fun onResume() {&#10;        super.onResume()&#10;        setHasOptionsMenu(true)&#10;    }&#10;&#9;&#10;&#9;override fun onCreateOptionsMenu(menu: Menu, inflater: MenuInflater) {&#10;&#9;&#9;menu.clear()&#10;        activity!!.menuInflater.inflate(R.menu.search_menu, menu)&#10;        super.onCreateOptionsMenu(menu, inflater)&#10;        val search = menu.findItem(R.id.action_search)&#10;        val searchView = search.actionView as SearchView&#10;        searchView.imeOptions = EditorInfo.IME_ACTION_DONE&#10;        search(searchView)&#10;&#9;}&#10;&#9;&#10;&#9;private fun search(searchView: SearchView) {&#10;&#9;&#9;&#9;searchView.setOnQueryTextListener(object : SearchView.OnQueryTextListener {&#10;&#9;&#9;&#9;&#9;override fun onQueryTextSubmit(query: String?): Boolean {&#10;&#9;&#9;&#9;&#9;&#9;if (mAdapter != null) {&#10;&#9;&#9;&#9;&#9;&#9;&#9;mAdapter!!.filter.filter(query)&#10;&#9;&#9;&#9;&#9;&#9;} else {&#10;&#9;&#9;&#9;&#9;&#9;&#9;showError(&quot;Data is not loaded&quot;)&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;return true&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#10;&#9;&#9;&#9;&#9;override fun onQueryTextChange(newText: String?): Boolean {&#10;&#9;&#9;&#9;&#9;&#9;if (mAdapter != null) {&#10;&#9;&#9;&#9;&#9;&#9;&#9;mAdapter!!.filter.filter(newText)&#10;&#9;&#9;&#9;&#9;&#9;} else {&#10;&#9;&#9;&#9;&#9;&#9;&#9;showError(&quot;Data is not loaded&quot;)&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;return true&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;})&#10;&#9;&#9;}&#10;&#9;&#10;&#9;override fun onActivityCreated(savedInstanceState: Bundle?) {&#10;&#9;&#9;super.onActivityCreated(savedInstanceState)&#10;&#9;&#9;init()&#10;&#9;}&#10;&#9;&#10;&#9;&#10;&#9;private fun init() {&#10;&#9;&#9;prepareData()&#10;&#9;&#9;initRecyclerView()&#10;&#9;}&#10;&#9;&#10;&#9;&#10;&#9;  private fun prepareData() {&#10;        mArrayList.clear()&#10;        for ((i, e) in Constant.DemoFirstName.withIndex()) {&#10;            val m$ClassName$ = $ClassName$()&#10;            m$ClassName$.firstName = Constant.DemoFirstName[i]&#10;            mArrayList.add(m$ClassName$)&#10;        }&#10;    }&#10;&#10;&#9;private fun initRecyclerView() {&#10;&#9;&#9;val layoutManager = LinearLayoutManager(context!!)&#10;&#9;&#9;&#10;&#9;&#9;$rv$.layoutManager = layoutManager&#10;&#9;&#9;&#10;&#9;&#9;mAdapter = $FragmentName$Adapter(context!!, mArrayList, object : $FragmentName$Adapter.ItemClickListener {&#10;&#9;&#9;&#9;override fun itemClick(position: Int) {&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;})&#10;&#9;&#9;&#10;&#9;&#9;$rv$.adapter = mAdapter&#10;&#9;&#9;&#10;&#9;&#9;mAdapter!!.notifyDataSetChanged()&#10;&#9;&#10;&#9;}&#10;}&#10;&#10;package $PACKAGE_NAME$&#10;&#10;import android.content.Context&#10;import android.view.LayoutInflater&#10;import android.view.View&#10;import android.view.ViewGroup&#10;import android.widget.Filter&#10;import android.widget.Filterable&#10;import androidx.appcompat.widget.AppCompatButton&#10;import androidx.recyclerview.widget.RecyclerView&#10;&#10;import $PACKAGE_NAME$.R&#10;&#10;/**&#10; * Created by Abhin.&#10; */&#10;class $FragmentName$Adapter(val mContext: Context, var mList: List&lt;$ClassName$&gt;, var mItemClickListener: ItemClickListener) : RecyclerView.Adapter&lt;$FragmentName$Adapter.$FragmentName$AdapterViewHolder&gt;(), Filterable {&#10;&#9;&#10;&#9;var mFilteredList = mList&#10;&#9;&#10;    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): $FragmentName$AdapterViewHolder {&#10;        val viewHolder = LayoutInflater.from(parent.context).inflate(R.layout.$layoutName$, parent, false)&#10;        return $FragmentName$AdapterViewHolder(viewHolder)&#10;    }&#10;&#10;    override fun getItemCount(): Int {&#10;        return mFilteredList.size&#10;    }&#10;&#10;    override fun onBindViewHolder(holder: $FragmentName$AdapterViewHolder, position: Int) {&#10;        val mData = mFilteredList[position]&#10;        holder.mName.text = mData&#10;        holder.itemView.setOnClickListener {&#10;            mItemClickListener.itemClick(position)&#10;        }&#10;    }&#10;&#10;    class $FragmentName$AdapterViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {&#10;        val mName = itemView.findViewById&lt;AppCompatTextView&gt;(R.id.$layoutTextView$)!!&#10;    }&#10;&#10;    interface ItemClickListener {&#10;        fun itemClick(position: Int)&#10;    }&#10;&#9;&#10;&#9; override fun getFilter(): Filter {&#10;            return object : Filter() {&#10;                override fun performFiltering(charSequence: CharSequence): Filter.FilterResults {&#10;                    val charString = charSequence.toString()&#10;                    if (charString.isEmpty()) {&#10;                        mFilteredList = mList&#10;                    } else {&#10;                        val filteredList = ArrayList&lt;$ClassName$&gt;()&#10;                        for (filter in mList) {&#10;                            if (filter!!.toLowerCase().contains(charString)||filter!!.toLowerCase().contains(charString)) {&#10;                                filteredList.add(filter)&#10;                            }&#10;                        }&#10;                        mFilteredList = filteredList&#10;                    }&#10;                    val filterResults = Filter.FilterResults()&#10;                    filterResults.values = mFilteredList&#10;                    return filterResults&#10;                }&#10;&#10;                override fun publishResults(charSequence: CharSequence, filterResults: Filter.FilterResults) {&#10;                    mFilteredList = filterResults.values as ArrayList&lt;$ClassName$&gt;&#10;                    notifyDataSetChanged()&#10;                }&#10;            }&#10;    }&#10;}" description="BaseFragment RecyclerView With Filter" toReformat="false" toShortenFQNames="false">
    <variable name="PACKAGE_NAME" expression="kotlinPackageName()" defaultValue="" alwaysStopAt="true" />
    <variable name="FragmentName" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="true" />
    <variable name="ClassName" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="FragmentLayout" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="rv" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="layoutName" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="layoutTextView" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="AddFirstFragment" value="addReplaceFragment(R.id.$fl_container$,$FragmentNmae$(),false,false,null)" description="only replace no back stack" toReformat="true" toShortenFQNames="true">
    <variable name="fl_container" expression="complete()" defaultValue="fl_container" alwaysStopAt="true" />
    <variable name="FragmentNmae" expression="complete()" defaultValue="Fragment" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="AddReplace" value="addReplaceFragment(R.id.$fl_container$,$FragmentNmae$(),false,true,null)" description="only replace with back stack" toReformat="true" toShortenFQNames="true">
    <variable name="fl_container" expression="complete()" defaultValue="fl_container" alwaysStopAt="true" />
    <variable name="FragmentNmae" expression="complete()" defaultValue="Fragment" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="Dimens" value="&lt;!-- Default screen margins, per the Android Design guidelines. --&gt;&#10;&lt;dimen name=&quot;activity_horizontal_margin&quot;&gt;16dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;activity_vertical_margin&quot;&gt;16dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;nav_header_vertical_spacing&quot;&gt;8dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;nav_header_height&quot;&gt;176dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;fab_margin&quot;&gt;16dp&lt;/dimen&gt;&#10;&#10;&lt;!--Common Dimensions --&gt;&#10;&lt;dimen name=&quot;dp_0&quot;&gt;0dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;dp_1&quot;&gt;1dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;dp_2&quot;&gt;2dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;dp_3&quot;&gt;3dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;dp_4&quot;&gt;4dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;dp_6&quot;&gt;6dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;dp_7&quot;&gt;7dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;dp_8&quot;&gt;8dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;dp_10&quot;&gt;10dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;dp_12&quot;&gt;12dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;dp_14&quot;&gt;14dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;dp_15&quot;&gt;15dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;dp_16&quot;&gt;16dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;dp_18&quot;&gt;18dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;dp_20&quot;&gt;20dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;dp_22&quot;&gt;22dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;dp_24&quot;&gt;24dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;dp_26&quot;&gt;26dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;dp_28&quot;&gt;28dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;dp_32&quot;&gt;32dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;dp_34&quot;&gt;34dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;dp_36&quot;&gt;36dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;dp_38&quot;&gt;38dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;dp_40&quot;&gt;40dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;dp_42&quot;&gt;42dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;dp_46&quot;&gt;46dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;dp_48&quot;&gt;48dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;dp_50&quot;&gt;50dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;dp_54&quot;&gt;54dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;dp_56&quot;&gt;56dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;dp_58&quot;&gt;58dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;dp_60&quot;&gt;60dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;dp_64&quot;&gt;64dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;dp_70&quot;&gt;70dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;dp_72&quot;&gt;72dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;dp_74&quot;&gt;74dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;dp_76&quot;&gt;76dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;dp_78&quot;&gt;78dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;dp_84&quot;&gt;84dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;dp_92&quot;&gt;92dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;dp_96&quot;&gt;96dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;dp_100&quot;&gt;100dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;dp_104&quot;&gt;104dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;dp_108&quot;&gt;108dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;dp_120&quot;&gt;120dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;dp_154&quot;&gt;154dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;dp_176&quot;&gt;176dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;dp_184&quot;&gt;184dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;sp_8&quot;&gt;8sp&lt;/dimen&gt;&#10;&#10;&lt;dimen name=&quot;sp_9&quot;&gt;9sp&lt;/dimen&gt;&#10;&#10;&lt;dimen name=&quot;sp_10&quot;&gt;10sp&lt;/dimen&gt;&#10;&#10;&lt;dimen name=&quot;sp_12&quot;&gt;12sp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;sp_13&quot;&gt;13sp&lt;/dimen&gt;&#10;&#10;&lt;dimen name=&quot;sp_14&quot;&gt;14sp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;sp_15&quot;&gt;15sp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;sp_16&quot;&gt;16sp&lt;/dimen&gt;&#10;&#10;&#10;&lt;dimen name=&quot;sp_17&quot;&gt;17sp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;sp_18&quot;&gt;18sp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;sp_20&quot;&gt;20sp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;sp_22&quot;&gt;22sp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;sp_24&quot;&gt;24sp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;sp_28&quot;&gt;28sp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;sp_42&quot;&gt;42sp&lt;/dimen&gt;&#10;&#10;&lt;!-- Height of the status bar --&gt;&#10;&#10;&lt;!-- Floating material dimen --&gt;&#10;&lt;dimen name=&quot;dp_30&quot;&gt;30dp&lt;/dimen&gt;&#10;&#10;&#10;&lt;dimen name=&quot;default_divider_height&quot;&gt;1dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;default_divider_padding&quot;&gt;4dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;recycler_section_header_height&quot;&gt;25dp&lt;/dimen&gt;&#10;&lt;dimen name=&quot;dp_138&quot;&gt;138dp&lt;/dimen&gt;" description="basic Dimens" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="XML" value="true" />
    </context>
  </template>
  <template name="Color" value="&lt;!--Black--&gt;&#10;&lt;color name=&quot;colorPrimaryBlack&quot;&gt;@color/DarkGrayLight&lt;/color&gt;&#10;&lt;color name=&quot;colorPrimaryDarkBlack&quot;&gt;@color/DarkGrayDark&lt;/color&gt;&#10;&lt;color name=&quot;colorAccentBlack&quot;&gt;@color/DarkGrayLight&lt;/color&gt;&#10;&#10;&lt;!--Blue--&gt;&#10;&lt;color name=&quot;colorPrimaryBlue&quot;&gt;@color/BlueJeansLight&lt;/color&gt;&#10;&lt;color name=&quot;colorPrimaryDarkBlue&quot;&gt;@color/BlueJeansDark&lt;/color&gt;&#10;&lt;color name=&quot;colorAccentBlue&quot;&gt;@color/BlueJeansLight&lt;/color&gt;&#10;&#10;&lt;!--BlueGreen--&gt;&#10;&lt;color name=&quot;colorPrimaryBlueGreen&quot;&gt;@color/MintLight&lt;/color&gt;&#10;&lt;color name=&quot;colorPrimaryDarkBlueGreen&quot;&gt;@color/MintDark&lt;/color&gt;&#10;&lt;color name=&quot;colorAccentBlueGreen&quot;&gt;@color/MintLight&lt;/color&gt;&#10;&#10;&lt;!--GreyBlue--&gt;&#10;&lt;color name=&quot;colorPrimaryGreyBlue&quot;&gt;@color/AquaLight&lt;/color&gt;&#10;&lt;color name=&quot;colorPrimaryDarkGreyBlue&quot;&gt;@color/AquaDark&lt;/color&gt;&#10;&lt;color name=&quot;colorAccentGreyBlue&quot;&gt;@color/AquaLight&lt;/color&gt;&#10;&#10;&lt;!--Pink--&gt;&#10;&lt;color name=&quot;colorPrimaryPink&quot;&gt;@color/PinkRoseLight&lt;/color&gt;&#10;&lt;color name=&quot;colorPrimaryDarkPink&quot;&gt;@color/PinkRoseDark&lt;/color&gt;&#10;&lt;color name=&quot;colorAccentPink&quot;&gt;@color/PinkRoseLight&lt;/color&gt;&#10;&#10;&lt;!--Yellow--&gt;&#10;&lt;color name=&quot;colorPrimaryYellow&quot;&gt;@color/SunflowerLight&lt;/color&gt;&#10;&lt;color name=&quot;colorPrimaryDarkYellow&quot;&gt;@color/SunflowerDark&lt;/color&gt;&#10;&lt;color name=&quot;colorAccentYellow&quot;&gt;@color/SunflowerLight&lt;/color&gt;&#10;&#10;&lt;!--Red--&gt;&#10;&lt;color name=&quot;colorPrimaryRed&quot;&gt;@color/GrapeFruitLight&lt;/color&gt;&#10;&lt;color name=&quot;colorPrimaryDarkRed&quot;&gt;@color/GrapeFruitDark&lt;/color&gt;&#10;&lt;color name=&quot;colorAccentRed&quot;&gt;@color/GrapeFruitLight&lt;/color&gt;&#10;&#10;&lt;!--Green--&gt;&#10;&lt;color name=&quot;colorPrimaryGreen&quot;&gt;@color/GrassLight&lt;/color&gt;&#10;&lt;color name=&quot;colorPrimaryDarkGreen&quot;&gt;@color/GrassDark&lt;/color&gt;&#10;&lt;color name=&quot;colorAccentGreen&quot;&gt;@color/GrassLight&lt;/color&gt;&#10;&#10;&lt;!--Purple--&gt;&#10;&lt;color name=&quot;colorPrimaryPurple&quot;&gt;@color/LavanderLight&lt;/color&gt;&#10;&lt;color name=&quot;colorPrimaryDarkPurple&quot;&gt;@color/LavanderDark&lt;/color&gt;&#10;&lt;color name=&quot;colorAccentPurple&quot;&gt;@color/LavanderLight&lt;/color&gt;&#10;&#10;&#10;&#10;&lt;!--GrapeFruit--&gt;&#10;&lt;color name=&quot;GrapeFruitLight&quot;&gt;#ED5565&lt;/color&gt;&#10;&lt;color name=&quot;GrapeFruitDark&quot;&gt;#DA4453&lt;/color&gt;&#10;&#10;&lt;!--BitterSweet--&gt;&#10;&lt;color name=&quot;BitterSweetlight&quot;&gt;#FC6E51&lt;/color&gt;&#10;&lt;color name=&quot;BitterSweetDark&quot;&gt;#E9573F&lt;/color&gt;&#10;&#10;&lt;!--Sunflower--&gt;&#10;&lt;color name=&quot;SunflowerLight&quot;&gt;#FFCE54&lt;/color&gt;&#10;&lt;color name=&quot;SunflowerDark&quot;&gt;#F6BB42&lt;/color&gt;&#10;&#10;&lt;!--Grass--&gt;&#10;&lt;color name=&quot;GrassLight&quot;&gt;#A0D468&lt;/color&gt;&#10;&lt;color name=&quot;GrassDark&quot;&gt;#8CC152&lt;/color&gt;&#10;&#10;&lt;!--Mint--&gt;&#10;&lt;color name=&quot;MintLight&quot;&gt;#48CFAD&lt;/color&gt;&#10;&lt;color name=&quot;MintDark&quot;&gt;#37BC9B&lt;/color&gt;&#10;&#10;&lt;!--Aqua--&gt;&#10;&lt;color name=&quot;AquaLight&quot;&gt;#4FC1E9&lt;/color&gt;&#10;&lt;color name=&quot;AquaDark&quot;&gt;#3BAFDA&lt;/color&gt;&#10;&#10;&lt;!--BlueJeans--&gt;&#10;&lt;color name=&quot;BlueJeansLight&quot;&gt;#5D9CEC&lt;/color&gt;&#10;&lt;color name=&quot;BlueJeansDark&quot;&gt;#4A89DC&lt;/color&gt;&#10;&#10;&lt;!--Lavander--&gt;&#10;&lt;color name=&quot;LavanderLight&quot;&gt;#AC92EC&lt;/color&gt;&#10;&lt;color name=&quot;LavanderDark&quot;&gt;#967ADC&lt;/color&gt;&#10;&#10;&lt;!--PinkRose--&gt;&#10;&lt;color name=&quot;PinkRoseLight&quot;&gt;#EC87C0&lt;/color&gt;&#10;&lt;color name=&quot;PinkRoseDark&quot;&gt;#D770AD&lt;/color&gt;&#10;&#10;&lt;!--LightGray--&gt;&#10;&lt;color name=&quot;LightGrayLight&quot;&gt;#F5F7FA&lt;/color&gt;&#10;&lt;color name=&quot;LightGrayDark&quot;&gt;#E6E9ED&lt;/color&gt;&#10;&#10;&lt;!--MediumGray--&gt;&#10;&lt;color name=&quot;MediumGrayLight&quot;&gt;#CCD1D9&lt;/color&gt;&#10;&lt;color name=&quot;MediumGrayDark&quot;&gt;#AAB2BD&lt;/color&gt;&#10;&#10;&lt;!--DarkGray--&gt;&#10;&lt;color name=&quot;DarkGrayLight&quot;&gt;#656D78&lt;/color&gt;&#10;&lt;color name=&quot;DarkGrayDark&quot;&gt;#434A54&lt;/color&gt;&#10;&#10;&lt;color name=&quot;Gray&quot;&gt;#CBCBCB&lt;/color&gt;&#10;&#10;&lt;color name=&quot;transparentBlack&quot;&gt;#80000000&lt;/color&gt;&#10;&lt;color name=&quot;transparentBlack65&quot;&gt;#B3000000&lt;/color&gt;&#10;&lt;color name=&quot;transparent20&quot;&gt;#33000000&lt;/color&gt;&#10;&lt;!--Here's a correct table of percentages to hex values. E.g. for 50% white you'd use #80FFFFFF.--&gt;&#10;&#10;&lt;!--100% — FF--&gt;&#10;&lt;!--95% — F2--&gt;&#10;&lt;!--90% — E6--&gt;&#10;&lt;!--85% — D9--&gt;&#10;&lt;!--80% — CC--&gt;&#10;&lt;!--75% — BF--&gt;&#10;&lt;!--70% — B3--&gt;&#10;&lt;!--65% — A6--&gt;&#10;&lt;!--60% — 99--&gt;&#10;&lt;!--55% — 8C--&gt;&#10;&lt;!--50% — 80--&gt;&#10;&lt;!--45% — 73--&gt;&#10;&lt;!--40% — 66--&gt;&#10;&lt;!--35% — 59--&gt;&#10;&lt;!--30% — 4D--&gt;&#10;&lt;!--25% — 40--&gt;&#10;&lt;!--20% — 33--&gt;&#10;&lt;!--15% — 26--&gt;&#10;&lt;!--10% — 1A--&gt;&#10;&lt;!--5% — 0D--&gt;&#10;&lt;!--0% — 00--&gt;" description="Base Color" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="XML" value="true" />
    </context>
  </template>
  <template name="String" value="   &lt;string name=&quot;error_internet_connection_common&quot; tools:ignore=&quot;ExtraTranslation&quot;&gt;Please check internet connection!&lt;/string&gt;&#10;&lt;string name=&quot;_0&quot;&gt;0&lt;/string&gt;&#10;&lt;string name=&quot;_00&quot;&gt;00&lt;/string&gt;&#10;&lt;string name=&quot;_59&quot;&gt;59&lt;/string&gt;&#10;&lt;string name=&quot;_01&quot;&gt;01&lt;/string&gt;&#10;&#10;&lt;!--Api Create user responses--&gt;&#10;&lt;string name=&quot;status_422&quot;&gt;Invalid data&lt;/string&gt;&#10;&lt;string name=&quot;status_500&quot;&gt;Internal server error&lt;/string&gt;&#10;&lt;string name=&quot;status_400&quot;&gt;Invalid Email password &lt;/string&gt;&#10;&lt;string name=&quot;status_409&quot;&gt;CONFLICT, User data existed&lt;/string&gt;&#10;&lt;string name=&quot;status_404&quot;&gt;email or username does not exists&lt;/string&gt;&#10;&lt;string name=&quot;status_423&quot;&gt;LOCKED, The User existed but status inactivated&lt;/string&gt;&#10;&lt;string name=&quot;status_201&quot;&gt;CREATED User created successfully now you can login&lt;/string&gt;&#10;&#10;&lt;!--TextViewTitle--&gt;&#10;&lt;string name=&quot;in&quot;&gt;In&lt;/string&gt;&#10;&lt;string name=&quot;out&quot;&gt;Out&lt;/string&gt;&#10;&lt;string name=&quot;type&quot;&gt;Type&lt;/string&gt;&#10;&lt;string name=&quot;menu&quot;&gt;Menu&lt;/string&gt;&#10;&lt;string name=&quot;total&quot;&gt;Total&lt;/string&gt;&#10;&lt;string name=&quot;taxes&quot;&gt;Taxes&lt;/string&gt;&#10;&lt;string name=&quot;notes&quot;&gt;Notes&lt;/string&gt;&#10;&lt;string name=&quot;price&quot;&gt;price&lt;/string&gt;&#10;&lt;string name=&quot;review&quot;&gt;Review&lt;/string&gt;&#10;&lt;string name=&quot;search&quot;&gt;Search&lt;/string&gt;&#10;&lt;string name=&quot;current&quot;&gt;Current&lt;/string&gt;&#10;&lt;string name=&quot;payment&quot;&gt;Payment&lt;/string&gt;&#10;&lt;string name=&quot;price_amount&quot;&gt;$9.99&lt;/string&gt;&#10;&lt;string name=&quot;user_type&quot;&gt;UserType&lt;/string&gt;&#10;&lt;string name=&quot;optional&quot;&gt;Optional&lt;/string&gt;&#10;&lt;string name=&quot;end_date&quot;&gt;End Date&lt;/string&gt;&#10;&lt;string name=&quot;sub_total&quot;&gt;SubTotal&lt;/string&gt;&#10;&lt;string name=&quot;end_notice&quot;&gt;End Notice&lt;/string&gt;&#10;&lt;string name=&quot;start_date&quot;&gt;Start Date&lt;/string&gt;&#10;&lt;string name=&quot;my_history&quot;&gt;My History&lt;/string&gt;&#10;&lt;string name=&quot;product_name&quot;&gt;Product Name&lt;/string&gt;&#10;&lt;string name=&quot;jode_email&quot;&gt;jode@operr.com&lt;/string&gt;&#10;&lt;string name=&quot;best_regards&quot;&gt;Best Regards,&lt;/string&gt;&#10;&lt;string name=&quot;welcome_back&quot;&gt;Welcome Back!&lt;/string&gt;&#10;&lt;string name=&quot;my_details&quot;&gt;Profile Details&lt;/string&gt;&#10;&lt;string name=&quot;optional_brackets&quot;&gt;(Optional)&lt;/string&gt;&#10;&lt;string name=&quot;forgotten&quot;&gt;Forgotten Password&lt;/string&gt;&#10;&lt;string name=&quot;institute_name&quot;&gt;Institute Name&lt;/string&gt;&#10;&lt;string name=&quot;profile_details&quot;&gt;Profile Details&lt;/string&gt;&#10;&lt;string name=&quot;distributor_name&quot;&gt;Distributor Name&lt;/string&gt;&#10;&lt;string name=&quot;add_profile_image&quot;&gt;Add Profile Image&lt;/string&gt;&#10;&#10;&#10;&lt;!--DialogUtils--&gt;&#10;&lt;string name=&quot;dialog_util_common_no&quot;&gt;NO&lt;/string&gt;&#10;&lt;string name=&quot;dialog_util_common_ok&quot;&gt;OK&lt;/string&gt;&#10;&lt;string name=&quot;dialog_util_common_yes&quot;&gt;YES&lt;/string&gt;&#10;&lt;string name=&quot;dialog_util_common_alert&quot;&gt;Alert&lt;/string&gt;&#10;&lt;string name=&quot;dialog_util_common_warning&quot;&gt;Warning&lt;/string&gt;&#10;&lt;string name=&quot;dialog_util_common_title_remind&quot;&gt;Remind&lt;/string&gt;&#10;&lt;string name=&quot;dialog_util_common_remind_again&quot;&gt;REMIND AGAIN&lt;/string&gt;&#10;&lt;string name=&quot;dialog_util_common_cancel&quot; tools:ignore=&quot;ButtonCase&quot;&gt;CANCEL&lt;/string&gt;&#10;&#10;&lt;!--userAccess--&gt;&#10;&lt;string name=&quot;password&quot;&gt;Password&lt;/string&gt;&#10;&lt;string name=&quot;username&quot;&gt;Username&lt;/string&gt;&#10;&lt;string name=&quot;last_name&quot;&gt;Last Name&lt;/string&gt;&#10;&lt;string name=&quot;first_name&quot;&gt;First Name&lt;/string&gt;&#10;&lt;string name=&quot;department&quot;&gt;Department&lt;/string&gt;&#10;&lt;string name=&quot;date_of_birth&quot;&gt;Date Of Birth&lt;/string&gt;&#10;&lt;string name=&quot;account_email_address&quot;&gt;Account Email Address&lt;/string&gt;&#10;&#10;&lt;!--TextViewWithColon--&gt;&#10;&lt;string name=&quot;to_colon&quot;&gt;To:&lt;/string&gt;&#10;&lt;string name=&quot;date_colon&quot;&gt;Date:&lt;/string&gt;&#10;&lt;string name=&quot;name_colon&quot;&gt;Name:&lt;/string&gt;&#10;&lt;string name=&quot;type_colon&quot;&gt;Type:&lt;/string&gt;&#10;&lt;string name=&quot;from_colon&quot;&gt;From:&lt;/string&gt;&#10;&lt;string name=&quot;note_colon&quot;&gt;Note:&lt;/string&gt;&#10;&lt;string name=&quot;email_colon&quot;&gt;Email:&lt;/string&gt;&#10;&lt;string name=&quot;total_colon&quot;&gt;Total:&lt;/string&gt;&#10;&lt;string name=&quot;status_colon&quot;&gt;Status:&lt;/string&gt;&#10;&lt;string name=&quot;number_colon&quot;&gt;Number:&lt;/string&gt;&#10;&lt;string name=&quot;address_colon&quot;&gt;Address:&lt;/string&gt;&#10;&lt;string name=&quot;state_colon&quot;&gt;State:&lt;/string&gt;&#10;&lt;string name=&quot;city_colon&quot;&gt;City:&lt;/string&gt;&#10;&lt;string name=&quot;pinCode_colon&quot;&gt;PinCode:&lt;/string&gt;&#10;&lt;string name=&quot;position_colon&quot;&gt;Position:&lt;/string&gt;&#10;&lt;string name=&quot;department_colon&quot;&gt;Department:&lt;/string&gt;&#10;&lt;string name=&quot;description_colon&quot;&gt;Description:&lt;/string&gt;&#10;&lt;string name=&quot;select_time_colon&quot;&gt;Select Time:&lt;/string&gt;&#10;&lt;string name=&quot;phone_number_colon&quot;&gt;Phone Number:&lt;/string&gt;&#10;&lt;string name=&quot;person_name_colon&quot;&gt;Person name:&lt;/string&gt;&#10;&lt;string name=&quot;region_colon&quot;&gt;Region:&lt;/string&gt;&#10;&lt;string name=&quot;please_select_colon&quot;&gt;Please Select:&lt;/string&gt;&#10;&lt;string name=&quot;full_part_time_colon&quot;&gt;Full/Part Time:&lt;/string&gt;&#10;&#10;&#10;&lt;!--Message--&gt;&#10;&lt;string name=&quot;msg_lorem_ipsum&quot;&gt;Lorem ipsum dolor sit amet, pro eu vulputate sadipscing conclusionemque. An per numquam facilis, aperiri contentiones sit cu. Has illud labores ex, cu doctus scripta quaerendum qui. Ad vim modus aperiam omittantur, vis te eruditi legendos incorrupte, ut his justo copiosae euripidis. Et melius alienum persequeris est, sit nibh soleat cu.&lt;/string&gt;&#10;&lt;string name=&quot;msg_press_back_to_exit&quot;&gt;Press back again to exit&lt;/string&gt;&#10;&lt;string name=&quot;msg_already_open&quot;&gt;Screen Already Open&lt;/string&gt;&#10;&lt;string name=&quot;msg_log_out&quot;&gt;Are you sure you want to Log Out ?&lt;/string&gt;&#10;&#10;&lt;!--TextViewClickable--&gt;&#10;&lt;string name=&quot;forgot&quot;&gt;Forgot Your Password ?&lt;/string&gt;&#10;&lt;string name=&quot;skip_this_step&quot;&gt;Skip This Step&lt;/string&gt;&#10;&#10;&lt;!--Button--&gt;&#10;&lt;string name=&quot;btn_done&quot;&gt;Done&lt;/string&gt;&#10;&lt;string name=&quot;btn_edit&quot;&gt;Edit&lt;/string&gt;&#10;&lt;string name=&quot;btn_save&quot;&gt;Save&lt;/string&gt;&#10;&lt;string name=&quot;btn_login&quot;&gt;Login&lt;/string&gt;&#10;&lt;string name=&quot;btn_clear&quot;&gt;Clear&lt;/string&gt;&#10;&lt;string name=&quot;btn_accept&quot;&gt;Accept&lt;/string&gt;&#10;&lt;string name=&quot;btn_cancel&quot;&gt;Cancel&lt;/string&gt;&#10;&lt;string name=&quot;btn_submit&quot;&gt;Submit&lt;/string&gt;&#10;&lt;string name=&quot;btn_continue&quot;&gt;Continue&lt;/string&gt;&#10;&lt;string name=&quot;btn_register&quot;&gt;Register&lt;/string&gt;&#10;&#10;&lt;!--ToolBar--&gt;&#10;&lt;string name=&quot;tb_updates&quot;&gt;Updates&lt;/string&gt;&#10;&#10;&lt;!--CheckBox--&gt;&#10;&lt;string name=&quot;remember_me&quot;&gt;Remember Me&lt;/string&gt;&#10;&lt;string name=&quot;i_agree_term&quot;&gt;I agree to terms &amp;amp; conditions&lt;/string&gt;&#10;&#10;&lt;!--DemoDateTime--&gt;&#10;&lt;string name=&quot;date_end&quot;&gt;End Date&lt;/string&gt;&#10;&lt;string name=&quot;date_start&quot;&gt;Start Date&lt;/string&gt;&#10;&lt;string name=&quot;date_mon&quot;&gt;Mon 01/01/19&lt;/string&gt;&#10;&lt;string name=&quot;date_wed&quot;&gt;Wed 03/12/19 9:25 AM&lt;/string&gt;&#10;&lt;string name=&quot;date_tue&quot;&gt;Tues 03 / 11 / 19 &lt;/string&gt;&#10;&lt;string name=&quot;date_only&quot;&gt;03/20/19&lt;/string&gt;&#10;&lt;string name=&quot;date_only_wed&quot;&gt;Wed 03 / 12 / 2019&lt;/string&gt;&#10;&lt;string name=&quot;date_only_wed_note&quot;&gt;Wed 03 / 12 / 2019 \n 9:25 AM&lt;/string&gt;&#10;&lt;string name=&quot;date_mon_april&quot;&gt;Monday April 25,2019&lt;/string&gt;&#10;&lt;string name=&quot;date_january&quot;&gt;Date: 01/01/19 – 01/07/19 &lt;/string&gt;&#10;&#10;&lt;!--DemoTime--&gt;&#10;&lt;string name=&quot;time_hrs&quot;&gt;Hrs&lt;/string&gt;&#10;&lt;string name=&quot;time_min&quot;&gt;Min&lt;/string&gt;&#10;&lt;string name=&quot;time_sec&quot;&gt;Sec&lt;/string&gt;&#10;&lt;string name=&quot;time_wed&quot;&gt;9:25 AM&lt;/string&gt;&#10;&lt;string name=&quot;time_10_30&quot;&gt;10:30 AM&lt;/string&gt;&#10;&lt;string name=&quot;time_tue&quot;&gt;5:30 PM&lt;/string&gt;&#10;&lt;string name=&quot;time_hours&quot;&gt;Hours&lt;/string&gt;&#10;&lt;string name=&quot;time_end&quot;&gt;End Time&lt;/string&gt;&#10;&lt;string name=&quot;time_minutes&quot;&gt;Minutes&lt;/string&gt;&#10;&lt;string name=&quot;time_seconds&quot;&gt;Seconds&lt;/string&gt;&#10;&lt;string name=&quot;time_start&quot;&gt;Start Time&lt;/string&gt;&#10;&lt;string name=&quot;time_total&quot;&gt;Total: 6 hrs 0 min&lt;/string&gt;&#10;&lt;string name=&quot;time_total_hours&quot;&gt;Total: 40.00 Hrs&lt;/string&gt;&#10;&#10;&lt;!--DemoAddress--&gt;&#10;&lt;string name=&quot;address_city&quot;&gt;City&lt;/string&gt;&#10;&lt;string name=&quot;address_area&quot;&gt;Area&lt;/string&gt;&#10;&lt;string name=&quot;address_country&quot;&gt;Country&lt;/string&gt;&#10;&lt;string name=&quot;address_pin_code&quot;&gt;PinCode&lt;/string&gt;&#10;&lt;string name=&quot;address_state&quot;&gt;State/Regions&lt;/string&gt;&#10;&lt;string name=&quot;address_first_line&quot;&gt;First Line Address&lt;/string&gt;&#10;&lt;string name=&quot;address_second_line&quot;&gt;Second Line Address&lt;/string&gt;&#10;&lt;string name=&quot;address_130_30_31st&quot;&gt;130 30 31st,Flushing,NY 11354 \n Tel. 1–178–460–0888&lt;/string&gt;&#10;&#10;&lt;!--Days--&gt;&#10;&lt;string name=&quot;monday&quot;&gt;Monday&lt;/string&gt;&#10;&lt;string name=&quot;tuesday&quot;&gt;Tuesday&lt;/string&gt;&#10;&lt;string name=&quot;wednesday&quot;&gt;Wednesday&lt;/string&gt;&#10;&lt;string name=&quot;thursday&quot;&gt;Thursday&lt;/string&gt;&#10;&lt;string name=&quot;friday&quot;&gt;Friday&lt;/string&gt;&#10;&lt;string name=&quot;saturday&quot;&gt;Saturday&lt;/string&gt;&#10;&lt;string name=&quot;sunday&quot;&gt;Sunday&lt;/string&gt;&#10;&#10;&lt;!--Months--&gt;&#10;&lt;string name=&quot;january&quot;&gt;January&lt;/string&gt;&#10;&lt;string name=&quot;february&quot;&gt;February&lt;/string&gt;&#10;&lt;string name=&quot;march&quot;&gt;March&lt;/string&gt;&#10;&lt;string name=&quot;april&quot;&gt;April&lt;/string&gt;&#10;&lt;string name=&quot;may&quot;&gt;May&lt;/string&gt;&#10;&lt;string name=&quot;june&quot;&gt;June&lt;/string&gt;&#10;&lt;string name=&quot;july&quot;&gt;July&lt;/string&gt;&#10;&lt;string name=&quot;august&quot;&gt;August&lt;/string&gt;&#10;&lt;string name=&quot;september&quot;&gt;September&lt;/string&gt;&#10;&lt;string name=&quot;october&quot;&gt;October&lt;/string&gt;&#10;&lt;string name=&quot;november&quot;&gt;November&lt;/string&gt;&#10;&lt;string name=&quot;december&quot;&gt;December&lt;/string&gt;&#10;&lt;string name=&quot;app&quot;&gt;App&lt;/string&gt;&#10;&lt;string name=&quot;report&quot;&gt;Reporting&lt;/string&gt;&#10;&#10;&lt;!--String Array--&gt;&#10;&lt;string-array name=&quot;request_off_menu&quot;&gt;&#10;    &lt;item&gt;Days Available&lt;/item&gt;&#10;    &lt;item&gt;2019&lt;/item&gt;&#10;    &lt;item&gt;2018&lt;/item&gt;&#10;    &lt;item&gt;2017&lt;/item&gt;&#10;    &lt;item&gt;2016&lt;/item&gt;&#10;&lt;/string-array&gt;&#10;&#10;&lt;string-array name=&quot;weekName&quot;&gt;&#10;    &lt;item&gt;Monday&lt;/item&gt;&#10;    &lt;item&gt;Tuesday&lt;/item&gt;&#10;    &lt;item&gt;Wednesday&lt;/item&gt;&#10;    &lt;item&gt;Thursday&lt;/item&gt;&#10;    &lt;item&gt;Friday&lt;/item&gt;&#10;    &lt;item&gt;Saturday&lt;/item&gt;&#10;    &lt;item&gt;Sunday&lt;/item&gt;&#10;&lt;/string-array&gt;&#10;&#10;&lt;string-array name=&quot;side_menu&quot;&gt;&#10;    &lt;item&gt;Reset PassCode&lt;/item&gt;&#10;    &lt;item&gt;Edit Signature&lt;/item&gt;&#10;    &lt;item&gt;News&lt;/item&gt;&#10;    &lt;item&gt;Terms &amp;amp; Conditions&lt;/item&gt;&#10;    &lt;item&gt;Setting&lt;/item&gt;&#10;    &lt;item&gt;Logout&lt;/item&gt;&#10;&lt;/string-array&gt;&#10;&#10;&lt;string-array name=&quot;Department&quot;&gt;&#10;    &lt;item&gt;Choose Department&lt;/item&gt;&#10;    &lt;item&gt;Cab&lt;/item&gt;&#10;    &lt;item&gt;Technical&lt;/item&gt;&#10;    &lt;item&gt;CustomerComplainer&lt;/item&gt;&#10;    &lt;item&gt;Terms &amp;amp; Conditions&lt;/item&gt;&#10;&lt;/string-array&gt;&#10;&#10;&lt;string-array name=&quot;States&quot;&gt;&#10;    &lt;item&gt;AndhraPradesh&lt;/item&gt;&#10;    &lt;item&gt;ArunachalPradesh&lt;/item&gt;&#10;    &lt;item&gt;Assam&lt;/item&gt;&#10;    &lt;item&gt;Bihar&lt;/item&gt;&#10;    &lt;item&gt;Chandigarh&lt;/item&gt;&#10;    &lt;item&gt;DadraandNagarHaveli&lt;/item&gt;&#10;    &lt;item&gt;DamanandDiu&lt;/item&gt;&#10;    &lt;item&gt;Delhi&lt;/item&gt;&#10;    &lt;item&gt;Goa&lt;/item&gt;&#10;    &lt;item&gt;Gujarat&lt;/item&gt;&#10;    &lt;item&gt;Haryana&lt;/item&gt;&#10;    &lt;item&gt;HimachalPradesh&lt;/item&gt;&#10;    &lt;item&gt;JammuandKashmir&lt;/item&gt;&#10;    &lt;item&gt;Jharkhand&lt;/item&gt;&#10;    &lt;item&gt;Karnataka&lt;/item&gt;&#10;    &lt;item&gt;Kerala&lt;/item&gt;&#10;    &lt;item&gt;Lakshadweep&lt;/item&gt;&#10;    &lt;item&gt;MadhyaPradesh&lt;/item&gt;&#10;    &lt;item&gt;Maharashtra&lt;/item&gt;&#10;    &lt;item&gt;Manipur&lt;/item&gt;&#10;    &lt;item&gt;Meghalaya&lt;/item&gt;&#10;    &lt;item&gt;Mizoram&lt;/item&gt;&#10;    &lt;item&gt;Nagaland&lt;/item&gt;&#10;    &lt;item&gt;Orissa&lt;/item&gt;&#10;    &lt;item&gt;Pondicherry&lt;/item&gt;&#10;    &lt;item&gt;Punjab&lt;/item&gt;&#10;    &lt;item&gt;Rajasthan&lt;/item&gt;&#10;    &lt;item&gt;Sikkim&lt;/item&gt;&#10;    &lt;item&gt;TamilNadu&lt;/item&gt;&#10;    &lt;item&gt;Telangana&lt;/item&gt;&#10;    &lt;item&gt;Tripura&lt;/item&gt;&#10;    &lt;item&gt;Uttaranchal&lt;/item&gt;&#10;    &lt;item&gt;UttarPradesh&lt;/item&gt;&#10;    &lt;item&gt;WestBengal&lt;/item&gt;&#10;&lt;/string-array&gt;&#10;" description="base String" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="XML" value="true" />
    </context>
  </template>
  <template name="ConstantFakeData" value="const val baseURL: String=&quot;http://54.234.166.153:8082/&quot;&#10;const val Tag = &quot;Tag&quot;&#10;var httpCacheDirectory: String = &quot;http-cache&quot;&#10;var cacheControl: String = &quot;Cache-Control&quot;&#10;const val mDashboardDateFormat = &quot;EEEE MMMM dd, YYYY&quot;&#10;const val mPunchInDateFormat = &quot;EEEE MM/dd/YYYY&quot;&#10;const val mDateOnlyDateFormat = &quot;MM/dd/YYYY&quot;&#10;const val mCommonTimeFormat = &quot;hh:mm a&quot;&#10;const val mTermsAndConditions = &quot;https://policies.google.com/terms&quot;&#10;val DemoTimeArray = arrayListOf(&quot;9.00AM&quot;, &quot;12.00PM&quot;, &quot;3.00PM&quot;, &quot;6.00PM&quot;, &quot;10.00PM&quot;, &quot;12.00AM&quot;)&#10;val DemoWeekArray = arrayListOf(&quot;Monday&quot;, &quot;Tuesday&quot;, &quot;Wednesday&quot;, &quot;Thursday&quot;, &quot;Friday&quot;, &quot;Saturday&quot;, &quot;Sunday&quot;)&#10;val DemoInOutArray = arrayListOf(&quot;In&quot;, &quot;Out&quot;, &quot;In&quot;, &quot;Out&quot;, &quot;In&quot;, &quot;Out&quot;)&#10;val DemoTypes = arrayListOf(&quot;Regular&quot;, &quot;O.T-1.5&quot;, &quot;SubTotal&quot;, &quot;Holiday&quot;, &quot;MINS ER&quot;, &quot;Total Wages&quot;, &quot;Total&quot;, &quot;NetPay&quot;)&#10;val DemoHistoryDays = arrayListOf(&quot;01/05/19 - 02/06/19&quot;, &quot;02/06/19 - 03/07/19&quot;, &quot;03/07/19 - 04/08/19&quot;, &quot;04/08/19 - 05/09/19&quot;, &quot;05/09/19 - 06/10/19 &quot;, &quot;06/10/19 - 07/11/19&quot;, &quot;07/11/19 - 08/12/19&quot;)&#10;val DemoHr = arrayListOf(&quot;0.00&quot;, &quot;0.00&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;)&#10;val DemoHrs = arrayListOf(&quot;40:00&quot;, &quot;0.00&quot;, &quot;40:00&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;)&#10;val DemoCurrent = arrayListOf(&quot;0 00&quot;, &quot;0 00&quot;, &quot;0 00&quot;, &quot;0 00&quot;, &quot;0 00&quot;, &quot;0 00&quot;, &quot;0 00&quot;, &quot;0 00&quot;)&#10;val topic = arrayListOf(&quot;Building Rules Regarding&quot;, &quot;Electronic Service Problem&quot;, &quot;Marketing Conference&quot;, &quot;Building Rules Regarding&quot;, &quot;Electronic Service Problem&quot;, &quot;Marketing Conference&quot;)&#10;&#10;//more random digit go to http://www.convertcsv.com/generate-test-data.htm&#10;//Add prefix go to https://saijogeorge.com/prefix-suffix-keywords-tool/&#10;var DemoUserFullName = arrayListOf(&quot;Pearl Williams&quot;, &quot;Edna Cross&quot;, &quot;Anne Schmidt&quot;, &quot;Lizzie Holt&quot;, &quot;Rachel Oliver&quot;, &quot;Martha Harvey&quot;, &quot;Alfred Freeman&quot;, &quot;Lydia Daniels&quot;, &quot;Francis Watson&quot;, &quot;Georgia Mathis&quot;, &quot;Derek Hansen&quot;, &quot;Charles Peters&quot;, &quot;Lillie Stanley&quot;, &quot;Juan Patton&quot;, &quot;Mabelle Crawford&quot;, &quot;Shane Mendoza&quot;, &quot;Luke Houston&quot;, &quot;Amelia Murphy&quot;, &quot;Marion Blake&quot;, &quot;Bertha Floyd&quot;)&#10;var DemoFirstName = arrayListOf(&quot;Lois&quot;, &quot;Norman&quot;, &quot;Ollie&quot;, &quot;Duane&quot;, &quot;Bill&quot;, &quot;Charlotte&quot;, &quot;Jeanette&quot;, &quot;Isabelle&quot;, &quot;Irene&quot;, &quot;Sylvia&quot;, &quot;Carlos&quot;, &quot;Eugenia&quot;, &quot;Lewis&quot;, &quot;Delia&quot;, &quot;Annie&quot;, &quot;Mollie&quot;, &quot;Callie&quot;, &quot;May&quot;, &quot;Isabelle&quot;, &quot;Charlie&quot;)&#10;var DemoLastName = arrayListOf(&quot;Guzman&quot;, &quot;Lyons&quot;, &quot;Lee&quot;, &quot;Roberson&quot;, &quot;Wells&quot;, &quot;Montgomery&quot;, &quot;Houston&quot;, &quot;Lane&quot;, &quot;Gonzales&quot;, &quot;Chapman&quot;, &quot;Cobb&quot;, &quot;Reid&quot;, &quot;Goodwin&quot;, &quot;Lowe&quot;, &quot;Christensen&quot;, &quot;Bryant&quot;, &quot;Stephens&quot;, &quot;Vaughn&quot;, &quot;Watkins&quot;, &quot;Todd&quot;)&#10;var DemoGender = arrayListOf(&quot;Female&quot;, &quot;Male&quot;, &quot;Female&quot;, &quot;Male&quot;, &quot;Male&quot;, &quot;Female&quot;, &quot;Female&quot;, &quot;Male&quot;, &quot;Female&quot;, &quot;Female&quot;, &quot;Female&quot;, &quot;Male&quot;, &quot;Female&quot;, &quot;Male&quot;, &quot;Male&quot;, &quot;Male&quot;, &quot;Female&quot;, &quot;Male&quot;, &quot;Male&quot;, &quot;Male&quot;)&#10;var DemoEmail = arrayListOf(&quot;sifecanaj@got.net&quot;, &quot;henoaju@wufeet.us&quot;, &quot;liti@kijkucili.fk&quot;, &quot;homaw@kucpipgul.yt&quot;, &quot;jerzec@ma.tr&quot;, &quot;iro@paj.com&quot;, &quot;ucocoj@noeb.gov&quot;, &quot;isfov@johadge.sy&quot;, &quot;pimwic@azpu.bt&quot;, &quot;ez@sol.mh&quot;, &quot;hiz@ebafetuk.qa&quot;, &quot;fubzag@numib.tz&quot;, &quot;cirda@rihol.cx&quot;, &quot;sagacfun@sawegnu.cr&quot;, &quot;se@cetpoov.cu&quot;, &quot;ke@nihu.tf&quot;, &quot;ruspefe@munsefev.io&quot;, &quot;gasde@riitdik.cl&quot;, &quot;as@honmi.dk&quot;, &quot;lanurec@ziverah.ph&quot;)&#10;var DemoPhone = arrayListOf(&quot;(344) 210-4051&quot;, &quot;(319) 346-7205&quot;, &quot;(646) 762-9934&quot;, &quot;(262) 709-1498&quot;, &quot;(528) 458-6361&quot;, &quot;(275) 972-3209&quot;, &quot;(738) 699-9488&quot;, &quot;(464) 312-3564&quot;, &quot;(636) 751-2760&quot;, &quot;(952) 295-2444&quot;, &quot;(601) 256-9040&quot;, &quot;(875) 455-8481&quot;, &quot;(244) 472-5613&quot;, &quot;(486) 544-5483&quot;, &quot;(512) 408-3976&quot;, &quot;(356) 541-2804&quot;, &quot;(462) 663-7315&quot;, &quot;(703) 902-6382&quot;, &quot;(578) 345-8262&quot;, &quot;(633) 606-5527&quot;)&#10;var DemoPriceWithDollarSign = arrayListOf(&quot;$4318.00&quot;, &quot;$1490.43&quot;, &quot;$8002.75&quot;, &quot;$9699.18&quot;, &quot;$7628.96&quot;, &quot;$4679.64&quot;, &quot;$108.57&quot;, &quot;$4201.76&quot;, &quot;$1699.81&quot;, &quot;$6093.31&quot;, &quot;$5955.62&quot;, &quot;$5866.21&quot;, &quot;$5160.11&quot;, &quot;$9369.55&quot;, &quot;$945.12&quot;, &quot;$1566.16&quot;, &quot;$192.87&quot;, &quot;$1346.54&quot;, &quot;$9344.07&quot;, &quot;$2062.03&quot;)&#10;var DemoPrice = arrayListOf(&quot;4318.00&quot;, &quot;1490.43&quot;, &quot;8002.75&quot;, &quot;9699.18&quot;, &quot;7628.96&quot;, &quot;4679.64&quot;, &quot;108.57&quot;, &quot;4201.76&quot;, &quot;1699.81&quot;, &quot;6093.31&quot;, &quot;5955.62&quot;, &quot;5866.21&quot;, &quot;5160.11&quot;, &quot;9369.55&quot;, &quot;945.12&quot;, &quot;1566.16&quot;, &quot;192.87&quot;, &quot;1346.54&quot;, &quot;9344.07&quot;, &quot;2062.03&quot;)&#10;var DemoBoolean = arrayListOf(&quot;true&quot;, &quot;false&quot;, &quot;false&quot;, &quot;true&quot;, &quot;true&quot;, &quot;false&quot;, &quot;false&quot;, &quot;true&quot;, &quot;true&quot;, &quot;false&quot;, &quot;false&quot;, &quot;false&quot;, &quot;false&quot;, &quot;true&quot;, &quot;false&quot;, &quot;true&quot;, &quot;false&quot;, &quot;true&quot;, &quot;false&quot;, &quot;true&quot;)&#10;var DemoDateDD = arrayListOf(&quot;8/11/1972&quot;, &quot;6/4/1964&quot;, &quot;25/7/1993&quot;, &quot;1/7/1998&quot;, &quot;21/6/1954&quot;, &quot;9/7/1959&quot;, &quot;2/12/1954&quot;, &quot;10/12/1965&quot;, &quot;30/5/2000&quot;, &quot;18/3/1956&quot;, &quot;7/6/1992&quot;, &quot;29/7/1972&quot;, &quot;26/11/1976&quot;, &quot;11/4/1976&quot;, &quot;26/8/1980&quot;, &quot;12/2/1974&quot;, &quot;6/12/1991&quot;, &quot;28/7/1984&quot;, &quot;7/7/1977&quot;, &quot;16/6/1978&quot;)&#10;var DemoDateMM = arrayListOf(&quot;01/16/2067&quot;, &quot;07/28/1948&quot;, &quot;09/07/2017&quot;, &quot;03/26/1942&quot;, &quot;04/22/2062&quot;, &quot;07/20/1909&quot;, &quot;05/10/1950&quot;, &quot;05/17/1999&quot;, &quot;04/24/1954&quot;, &quot;08/17/1924&quot;, &quot;03/21/1952&quot;, &quot;03/11/1983&quot;, &quot;06/19/1912&quot;, &quot;10/09/2000&quot;, &quot;12/07/1932&quot;, &quot;11/10/2031&quot;, &quot;07/12/2019&quot;, &quot;10/23/2019&quot;, &quot;01/20/1990&quot;, &quot;03/03/1950&quot;)&#10;var DemoFullDes = arrayListOf(&quot;Wo vehnuje osaze urmac ujiesilof ram vohdat kibul jilvo marabe zu ces ab dano imiz jog. Ho jafgihon ivvac mu hu lukolcag nileva bihjiha ugo dugwasel vebjasce ma ahha womidpet wazuuk. Olliwmu gefiw fuwgic lowzuh limtig hevluhuf seluc obo uka tu usiekahib fem tob rautvo. Gapehe ge mubaza busocjof ci zapnuv ogiep ebhujag mesho keswer gosdiviv wac uh na. Belakale deonaar vujuwtug razgeguz ud ize wibcida kiwwe ebaheoc bibbilce mekesriw wivozha gufweb kedgunbo mepcu ekojih jeb.&quot;, &quot;Ka talfeibo tazatda hilhazpa ujdal ja similol eb tepe ele kam vubu hitiz. Wecesad tehi fobisrib hiwnagzal cottarjuj naz bad hilewiw duce tecti va sesuvlek wos fasul kir unet caagi. Laltuw gudfubvod izrog po jikec mikebudu dimo savopa zueh uf loof ji webat lumzi lerep sacab ote. Zisfagowi kim mefikez uk suprozed alfan upulu umkoj amute ci gutonu wer.&quot;, &quot;Vasa ricjunbud tuj kingigav foewuseb jahomus vona hif hasdow vajow veh me apiehadel. Zi rijhaf buv ejva fah maztapi tissepvu voote sokifeboh dawiv hih mo jesorkab. Hepzime pike muja ubi kukpigi ipe uvjije efo kedu sini wissahtop vugber rombac. Urkemboc imeforda di isjekdi murzice ho ejipeh gi ewuedcuk oso iwanor kicsamero ituhahno aj. Jeze teket so etju we pi aztur esdomneb hirru bacfazevu di ose mofcez ju lab asu fa. Ajo lev saksuffu du uba rujru azu wofopco fiefuroc ge buz ka lerga pec gesenoh pud van jalfa.&quot;, &quot;Tep wosvifnu sid lil ovkinzo kar vukpidu pizveib otogupa ozgip fakzaka etdo juc pehar. Haivo zokwuede ja esuzu eha kit zojo alu fucughuw gic tu ku de neh oralu ji. Kadavan gohewu ictemamo fali owepako bofijup nutajpa souc wipanrig mucleni gadcu tetsik dader efu rir sihaura. Kemnih joku janabaci guut udico lapva kudmit zunepip fotu dog udeperjol jic to buwemanu fudfuwdun azafewot suwtu mander. Hoav hicofut olomem osza pet bogez tezi bebsuute osbep sarip biwcira ludovu. Ibo cubup li saduw li rehupu muzzizlob wut todgowni mocem tawuz pomivodi if le hugutoze. Cu ol kas leof ibjig zad ireha lothifo zekos jeb uhise tusonep.&quot;, &quot;Ga kabu jo cucetmif letka golophu we duze wa um bagor ze miz jafli guhigen bowwibsu huaw. Piko uzewugu etsag bortu feh pohip lu ri bozmufuf idule huano faapo. Bafloc wiajuwol lo gihok werewawa toupkuc jiv tofo ozaludira etako jas erazije katicoh. Fappiw goug titablez ujedem gikaca ciha ezeladed zocoz rej puftadami ig lulpigaw ahinieba dojafazo es ati ow faz. Sakiwos ful jatotuzi ruvi ce be vuw jus uzefisag jeg kuz remasober ejhizhuv za wijopfum. Eg izwo dewbum cacnuk ko buk lu menpupne sujtumada gi velod ukapetces ik ovroar got abolojom hoc. Les teh rebiliki de niw zo tu vusees anuoco jonje di tosedi coz zezci akpozpu ihamusa duv.&quot;, &quot;Ke zapsenbi nimosog tose maw enrodwab jufib nobne pitlim emousdeh duzamov zegfez mesogsiw etne iflesak tutaule aju irazosur. Dus ec dineji zanri kuvruv tidfuna solropsov nidap tindas pe ze ris fetpep apge comazo ok jebmohle gabni. Lak ono ow siwcibew za lo varafuco dulin to wihetacar bafogu wovib wom doeco ce conto vazsowozu. Jizkotpo bunube zu zo muh pinepvoz rogcob puldolap peteroh ovu jazajo hijset rearuje gitev suzud orelaj locuc varev. Ihupe hericwep puowo zuwile rumposcaj bi lumen fitdokru le tissebuf no gof wakivase. Litecoror cuhkip wustohfeg jif uhtegi etoasovu riroon co riwahi cir tion anihauda mufoj. Rigu buoragu jar hal ahitid ti cibapij ukidgob begpin cuzzelnu palwoona uzaig.&quot;, &quot;Jocda fak cofi puocce bibatawij lozpo lucefuz fatugsev bozkuus at wutsub sodam ru umiupeza tohjob lirti bethe. Peg ekarov pozwob nugar umazwo zagbi otwufop uwo isla bucejsad gec suwnifoc jej. Vicepi puvebota ro dak pom konotsih go ze tomjemjiv zu udliiku ac ebece vev ol.&quot;, &quot;Liiphik kal pen el macejwa za labaco obezujogu zuif woh doif puggu arje. Tovapoig rel didzoga lez daceskes mem kog saacgoc lunfo ve afojismaf hiedu sumka. Men waknisuv avekuvada hamaz toc rosnabon telpi meckekoj evwujev bigjiwhet ilto leleljik haimihuc usnikur. Kis cazko lujgoplo furi muevoet ovubo ci ujo igihonemu ganawji sugun wicog si.&quot;, &quot;Funol nisijlez resrocap piukiva kesaozu fihobo of cufen mebizak nekpif kevgofji gazjo ris megzo ihidun uwu kiif. Ewzejij uhneh datkewo cockim bo wower ifho bepupu wi neb ale gok jubeb rohidek ab he. Ge matpekto bojon bigzegkuw moc no vuwetvag nul ilibovog jam fazugej zu fab hefu kuzu agicikok. Lijawtaf kiewe moegizow meze cekufkis egip mudsitko dusloke fu ajevuhe zatgo wombu oleumetov pal he catu.&quot;, &quot;Fobfahtel saetalip giskev comanone ucoehazig sasor amuusada vecvigmiz zafuf cafal cimos honrih zu. Kuedoaga nohuc luflow wi zavu woj wiukeho vafijsu udse egababa leridag lasa pokigi jo ba rugu fumijre. Dogeni luteb pojedu kaeg jitgolo puf do tef buwmawo vagna had okmir nac. Ep ulo olhuur cuhpala did iteoj re malure ba dewavim tentufa elfeer. Mu taj amog daf kam vincejof pisloici dukiw jepginehe vuucogan ecpuljam ulteula fuvcuj ku. Ka va woz sa jok ew cegefu ok sugi ti fiwlor woktewke wicdelvu medek.&quot;, &quot;Resrohab kukujwa codozu ul bur lurkauge wilep ciemo bekaz kiv pero et mabec semevra. Tijwek mo boneji gupazoc vivafceb bufapifu jufgeiku fogif ema ki paikgiv jelwi ezokugo se veb fag kacdum lawrigdes. Diha dik powdiz odofafheh co vud sudusin kipdij ner fu awufa wiuva. Oluwa ahec pizahe vavi bi habmaod ruh ufu jateaji ahhel hillal wiwerboj icaes het di ralosevah asa.&quot;, &quot;On laczi necid vuwet gowul pon ce re pozud nogcetzo efoeteja ugelatop. Vowegazub fe adagoti egunoj larohlus ni ohhe kudhi simuf ugmotmu om doptemu. Ka vahdoptit hus tin haiva uke lafe no nebesobak adeho mobzahuj foidful affezbod fihucon pocmeuj olwof ise jigvic. Kouw mu coh zaghuf ip cakwek ujoh duregoni awehon gu finen homlu jeppu or. Soslunzul ipi somep zollejno nusneguj zuovuze mezdod cunimpe for hapmi ubu keb zatmo im.&quot;, &quot;Law kige sotu kesucruf kepibut edwot ideuvi vaugu wu vehtofjon onaza row sive. Foci wi eplituv ri zizlomev webfotel sipbew acmum zecgurme agunu iteigoco igoniv wevo gur cehat ihmog juazeag. Ihiveito bop rasniseda di dep coj usfupos onusus wehiv zafnud rezol hilsu mojmeses ahabuptas ojzo jiefa etwoser eziko. Hu zicanug fikzo ri dicligme ikewoew pi putnoviko sofupeka fip rugoijo okhem ciwitdi mipijcac nobvoodo bibusuk.&quot;, &quot;Af abavo zoubkef eb fed lud wofew dazwop wubeul apunob famnuhge wuzevhom we sepa. Roh ati tecwef ato renikbef awa ge no tiziglu lalsu orabiva sifec. Bepev sagenwu vumebebi cagdihmu te uroas tupufezah me inanuc jemuv sudet ge cohuvwek ka rol. Esotebgig tejud wuweuro kofuz niluw fam fugrioca rele gecoh ijogo did diabe wi utnise. Gamujez lidala huun zaomsak ulhitci adakabi amo hibde sek hozille na jopu vigto. Heuvado duutij bodupzu abe he gurdali perorna kehiwva ahnu or rifig punhof so sa.&quot;, &quot;Ocajipiju jolvivwan fiw powu wun na upo pe vor divuze leru ho weg ahesu ime gihe. Nahon kemhi muugewa denille rud zel merum zeb lic fenuco bolfi uhjefnok. Kavzukuj jaduj luj iho ta mapsek sabe revgores mu mizmad okfo vaw nomat. Okupibtof idhifsij efced gojwibho edaihluc backolpis za no pi az nigke mad hon. Gavkow diat cuogweg ditemfoz paczo hegemujo suvubas okuutu wurlodji mufwu laefe avuvioh hakcak. Zego purad jodojpaj ahi eruoz giwet azegar ba hon kuubo leemul oglor upni abokulkoj akpuwi rolow hiz mem.&quot;, &quot;Wihadu bu dinguj cu aworo fenni rewopco kezvabis cecwak lamo omje mum ovvedwe of riiha wu paglefik. Cuj ernupug top goid vojulzak zojaz ososa po pi ecazuzgu kutusab aho gugre. Peugebi dureuz muf depnomo nilufe wi bor ici ca vil vag nu unejuh ap vefcijah lubuf gev ogutic. Riwronati pigzoj ic ejezos ogideshe cec ra jit etaab jaja tanamu pum usuro jejpuvog ta su nauw jabhoje.&quot;, &quot;Woavu vomfoco macun wuzpeob gurdid zeamo vohokkad sib era jabug mav ruv wovu rolneave beonne hef. Imde uv zuf owa gacom gudusnuk awvakhic ic iweja uhusupop tekjo juzbad pitaf fa gi nerkefpi. Guvopbum do jo ruzsov uvusafaz jus judrirhe hed ko iz wow kokaca seugovim afawuke wujum gewa buul. Cujuhfiw gakjogu wadufpu pa pit ajiro zacijak ucri le ok muwavi dag de ev emiga gutid coswemaf cavcicnuw. Geim zicarli zidcut ovepi sos busvegnap fo mozlowcek ebinez vuwol lunuf cenrifbi aji.&quot;, &quot;Kehavuko ipeazo efo gus jazev pafoh hewca vam apra tujtizap fapsokvoz femezpu er tekretzi fisa. Leddi ewtahom hisev kaf gijavom jofek gob ujuta voefu zaza ve aw zasmozej. Davabci cipiwhuj vunu wipulo wiwedep zig fel hernoure veb ah jenimos noohi juslamas nujwez. Bepucmom bococa cagej pitrif hubwe jarur apwaksam pezeini vitfisele vuvpopa vuvabtih owo.&quot;, &quot;Ahufikihi vadjowu begger ogoosje wo zok azu gafjikudi eh wep up no marcuica kaja woce ho. Gew eghi wejov usawepma fewfizki sob ir pumegwu gafuro ondupuka vevupde ezvon degditef vu ibigipri sir luinubu. Cedgihzi fubemopoc paeco ibjoho afjulah bi omcal lupevatij goge felocam moela upu. Teiwbu dek uhzuwor le vicsubul kim licuh azna unadamve ca nunlafu mu.&quot;, &quot;Gi lokpi epufuw neige saosa hetzurol ove zosca guc rodufgug kumbivje ros. Rol ikho di bul dunmite buwcawfod ona ogmu an girjev ka vafiv evegoug fepwuso fipas. Lezof osues opiw oto hitcala nibirwag pirwot wi cicaim gezpuvnet lod giagene evbojweh ujvozoz su. Awsu era kaleik vis ceofaca eka ja lu ulo foc hile ho pisas sal na uvoivgam icavuf af. Gofolonuc zo fajzeka nuwi sel saw nokovut rif sebujis obenezu bigab ruoja rum kiskipdut bevum pobjifme gepbunec. Ifkep iwjufmu avu ce gufe zupjuc ifive ebipe ude ulozil alvumep pafva va ke emi vumjeje ve puhlomuh. Lup te ditora gavkemmo lo cinuhi ju egsa cusamice sesdatdub sicteceb cusufcod iflelu ru loh.&quot;)&#10;var DemoDes = arrayListOf(&quot;Accaf bafibdan me tusuz pufpecgu sibzeh selkevuv rebag ehjuce jip nubip kapeg tivejap lovof gus lewme zezi bissaj.&quot;, &quot;Ebudop peh latasiz arbamom zuf fopgik bomlepeni ta ab evboku rinuci couj.&quot;, &quot;Efhat bokicje kesocor ramofwat cu mijug jevconvip pum waj inomiaw rijojov wo zohuve vegele fud.&quot;, &quot;Ga onidivoli owu leugka jab eve ecto mecmopat mo tav go repso pok belutsut evicorwas oflih ce jubzog.&quot;, &quot;Go ru elfer dijipi da rugih tutru jepoun befipbe usu copgipdok hizpatoli kaskiise.&quot;, &quot;Machab zig vej sifwi ibavekka jonav si je tiodaezi cabunfib ojabi situhu atelu nudlov opa gu.&quot;, &quot;Cenna vuokewuh gifvuv ot iviivodu vevoh wabuz bokkov ucotisaw suoj libas fa girac ejeju uke.&quot;, &quot;Lapede raco gebujpa kap lofuknar ezavefde mafol one pufag zi nebac hehuada sahafpel ap aji uhfughul cauci culjeabi.&quot;, &quot;Bec owpu gepoza hizfurad dubjasun umazabok acamaduv ahir ecaltuw re dekamke mak celjit afasi ojuzis lo uji dudwa.&quot;, &quot;Cilcieja ij rid zudza igoremfo logmoj oralonu foninar gawuf am calnaknev uj olfa kuzizup ludeh dode mo ub.&quot;, &quot;We fup punacud kenos zukfew wiw irafa deno jijkemu rorpo bif af tatdeja wa.&quot;, &quot;Feffo cobiziz zazalic zicve zupsew fazba zawizoz sofpaonu areasekar zuz ac rodi.&quot;, &quot;Dohzuz ug wiafi curuom zuptitik baise la hehudav nuh cawaku ad pobubasa.&quot;, &quot;Hociulo mu ji pemermew ge jagtufrah wutnu zur fema iscibil fow vobfe runanu fone zoz.&quot;, &quot;Jefuloge uwoita urudumlif faprofsi kar urimanki piupuves zuhpoj he aresof ja jabla fag fit re ob fubaggiz.&quot;, &quot;Fohuh pi tur ek voun ucebawbob tolgoidi susniara kun si cunutev izofesik.&quot;, &quot;Tuwabo ujas wilal turdosa bizacize wu zujpaej fom apni uzuvi tivibju keba.&quot;, &quot;Zurtas ow gawbonon hagaw tifvab aroawod segdok podi vodhebzu if aguraf janruluw hetoferu kirzigu nafocfo.&quot;, &quot;Itpo sooj to rijri den zadbeg povsih nivzegef zud baane zigciso avi surifewu.&quot;, &quot;Tuf renajdab direc puwpol ra ninno zujjocu isboesa col futacega cuokewaf be dipdaej.&quot;)&#10;var DemoAge = arrayListOf(&quot;63&quot;, &quot;40&quot;, &quot;32&quot;, &quot;40&quot;, &quot;49&quot;, &quot;55&quot;, &quot;24&quot;, &quot;55&quot;, &quot;28&quot;, &quot;59&quot;, &quot;57&quot;, &quot;65&quot;, &quot;59&quot;, &quot;22&quot;, &quot;57&quot;, &quot;56&quot;, &quot;46&quot;, &quot;64&quot;, &quot;45&quot;, &quot;45&quot;)&#10;var DemoCity = arrayListOf(&quot;Vefcakzi&quot;, &quot;Tuokugop&quot;, &quot;Ranojhat&quot;, &quot;Ontonoj&quot;, &quot;Fidtigeb&quot;, &quot;Rihesadu&quot;, &quot;Rawameju&quot;, &quot;Ezaveiz&quot;, &quot;Duupvom&quot;, &quot;Zezpawheg&quot;, &quot;Gamisiwo&quot;, &quot;Kohezev&quot;, &quot;Rovnegija&quot;, &quot;Siwtubu&quot;, &quot;Ectenik&quot;, &quot;Fapezid&quot;, &quot;Nebtahe&quot;, &quot;Acakojow&quot;, &quot;Wedulu&quot;, &quot;Guhmuhap&quot;)&#10;var DemoCreditCardNumber = arrayListOf(&quot;30068498124438&quot;, &quot;4159944986656858&quot;, &quot;5199131390536020&quot;, &quot;201476936146090&quot;, &quot;347891246948313&quot;, &quot;4738281808712241&quot;, &quot;4026078273941128&quot;, &quot;5610462323066061&quot;, &quot;4026791824554907&quot;, &quot;6304437980702439&quot;, &quot;4026162866299431&quot;, &quot;6304380415833074&quot;, &quot;4026742618796212&quot;, &quot;5429339075475792&quot;, &quot;4903547641819768&quot;, &quot;30099186966970&quot;, &quot;6334414143509013&quot;, &quot;348488312184375&quot;, &quot;201463652760494&quot;, &quot;6370805820744416&quot;)&#10;var DemoRandomDigit = arrayListOf(&quot;8666630923&quot;, &quot;8131511245&quot;, &quot;1921097816&quot;, &quot;3689918192&quot;, &quot;9573787145&quot;, &quot;2700955316&quot;, &quot;6944001073&quot;, &quot;5593212784&quot;, &quot;0173159017&quot;, &quot;0735275449&quot;, &quot;3857065840&quot;, &quot;6389795865&quot;, &quot;0365332731&quot;, &quot;0230842291&quot;, &quot;6277925495&quot;, &quot;5008047697&quot;, &quot;4560916069&quot;, &quot;0710667835&quot;, &quot;8448833665&quot;, &quot;1891690849&quot;)&#10;var DemoRandomFloat = arrayListOf(&quot;-110938171847.4752&quot;, &quot;-205390724517.0688&quot;, &quot;-366579041907.5072&quot;, &quot;-550974525118.8737&quot;, &quot;-455431079277.3632&quot;, &quot;-279126605194.8544&quot;, &quot;-423873815039.1808&quot;, &quot;562555466127.7697&quot;, &quot;-467665092712.8576&quot;, &quot;-313099418599.424&quot;, &quot;-843323762592.9728&quot;, &quot;-706431899035.2384&quot;, &quot;-259505519381.7088&quot;, &quot;384804153458.688&quot;, &quot;-136625177126.5024&quot;, &quot;347537365637.5296&quot;, &quot;170909548884.7872&quot;, &quot;-678319183468.9536&quot;, &quot;830922895969.4847&quot;, &quot;288483732094.976&quot;)&#10;var DemoDomain = arrayListOf(&quot;hedop.cu&quot;, &quot;gomivo.lr&quot;, &quot;odija.uk&quot;, &quot;zu.sb&quot;, &quot;noncal.net&quot;, &quot;ralogo.cm&quot;, &quot;merduok.bw&quot;, &quot;monroj.am&quot;, &quot;bif.cf&quot;, &quot;hudbehe.gm&quot;, &quot;picabu.gy&quot;, &quot;jovfioj.bo&quot;, &quot;la.mc&quot;, &quot;vewbaso.tj&quot;, &quot;uvava.tj&quot;, &quot;robukobu.ws&quot;, &quot;lepnalolo.za&quot;, &quot;nar.cz&quot;, &quot;cuj.st&quot;, &quot;ucfiklig.sz&quot;)&#10;var DemoRandomInt = arrayListOf(&quot;-621342&quot;, &quot;-353931&quot;, &quot;-712227&quot;, &quot;-20332&quot;, &quot;151595&quot;, &quot;241099&quot;, &quot;-939901&quot;, &quot;-51721&quot;, &quot;987697&quot;, &quot;-725164&quot;, &quot;135664&quot;, &quot;-998954&quot;, &quot;201773&quot;, &quot;710098&quot;, &quot;401421&quot;, &quot;631614&quot;, &quot;844249&quot;, &quot;10836&quot;, &quot;-11716&quot;, &quot;-37342&quot;)&#10;var DemoStateSmall = arrayListOf(&quot;SK&quot;, &quot;SK&quot;, &quot;QC&quot;, &quot;MB&quot;, &quot;YT&quot;, &quot;ON&quot;, &quot;AB&quot;, &quot;YT&quot;, &quot;NU&quot;, &quot;NL&quot;, &quot;NT&quot;, &quot;NL&quot;, &quot;NS&quot;, &quot;AB&quot;, &quot;NT&quot;, &quot;AB&quot;, &quot;NU&quot;, &quot;PE&quot;, &quot;NT&quot;, &quot;SK&quot;)&#10;var DemoStreet = arrayListOf(&quot;Movam Extension&quot;, &quot;Nukjan Manor&quot;, &quot;Dosif Trail&quot;, &quot;Folovo Extension&quot;, &quot;Netce Trail&quot;, &quot;Sahen Grove&quot;, &quot;Iluwob Pass&quot;, &quot;Estev River&quot;, &quot;Gaaha Turnpike&quot;, &quot;Fesed Extension&quot;, &quot;Keblaj Junction&quot;, &quot;Ciec Way&quot;, &quot;Liupo Square&quot;, &quot;Jedmu Drive&quot;, &quot;Jecfe Path&quot;, &quot;Veje Avenue&quot;, &quot;Dubof Drive&quot;, &quot;Zema Key&quot;, &quot;Cauje Turnpike&quot;, &quot;Zibja Boulevard&quot;)&#10;var DemoId = arrayListOf(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;, &quot;7&quot;, &quot;8&quot;, &quot;9&quot;, &quot;10&quot;, &quot;11&quot;, &quot;12&quot;, &quot;13&quot;, &quot;14&quot;, &quot;15&quot;, &quot;16&quot;, &quot;17&quot;, &quot;18&quot;, &quot;19&quot;, &quot;20&quot;)&#10;var DemoZip = arrayListOf(&quot;13566&quot;, &quot;79260&quot;, &quot;17879&quot;, &quot;14778&quot;, &quot;48735&quot;, &quot;01399&quot;, &quot;91790&quot;, &quot;25241&quot;, &quot;96467&quot;, &quot;18793&quot;, &quot;16163&quot;, &quot;54993&quot;, &quot;32832&quot;, &quot;15865&quot;, &quot;88700&quot;, &quot;27700&quot;, &quot;44072&quot;, &quot;58721&quot;, &quot;52390&quot;, &quot;28146&quot;)&#10;var stateList = arrayListOf(&quot;Andhra Pradesh&quot;, &quot;Arunachal Pradesh&quot;, &quot;Assam&quot;, &quot;Bihar&quot;, &quot;Chandigarh&quot;, &quot;Dadra and Nagar Haveli&quot;, &quot;Daman and Diu&quot;, &quot;Delhi&quot;, &quot;Goa&quot;, &quot;Gujarat&quot;, &quot;Haryana&quot;, &quot;Himachal Pradesh&quot;, &quot;Jammu and Kashmir&quot;, &quot;Jharkhand&quot;, &quot;Karnataka&quot;, &quot;Kerala&quot;, &quot;Lakshadweep&quot;, &quot;Madhya Pradesh&quot;, &quot;Maharashtra&quot;, &quot;Manipur&quot;, &quot;Meghalaya&quot;, &quot;Mizoram&quot;, &quot;Nagaland&quot;, &quot;Orissa&quot;, &quot;Pondicherry&quot;, &quot;Punjab&quot;, &quot;Rajasthan&quot;, &quot;Sikkim&quot;, &quot;Tamil Nadu&quot;, &quot;Telangana&quot;, &quot;Tripura&quot;, &quot;Uttaranchal&quot;, &quot;Uttar Pradesh&quot;, &quot;West Bengal&quot;)" description="ConstantFakeData" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="HorizontalLine" value="&lt;View&#10;android:layout_width=&quot;match_parent&quot;&#10;android:layout_height=&quot;@dimen/dp_1&quot;&#10;android:background=&quot;@android:color/black&quot;&#10;/&gt;" description="make" toReformat="false" toShortenFQNames="true" />
  <template name="PrepareDummyData" value="private fun prepareData() {&#10;&#9;mArrayList.clear()&#10;    for ((i, e) in Constant.DemoFirstName.withIndex()) {&#10;        val m$ClassName$ = $ClassName$()&#10;        m$ClassName$.firstName = Constant.DemoFirstName[i]&#10;        mArrayList.add(m$ClassName$)&#10;    }&#10;}" description="Dummy Data" toReformat="false" toShortenFQNames="true">
    <variable name="ClassName" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="LinearLayoutHorizontal" value="val layoutManager = LinearLayoutManager(context!!, LinearLayoutManager.HORIZONTAL, false)" description="Horizontal Linear Layout" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="PaddingAllSide" value="android:paddingTop=&quot;$dimen$&quot;&#10;android:paddingStart=&quot;$dimen$&quot;&#10;android:paddingEnd=&quot;$dimen$&quot;&#10;android:paddingBottom=&quot;$dimen$&quot;" description="Padding All Side" toReformat="false" toShortenFQNames="true">
    <variable name="dimen" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="XML" value="true" />
    </context>
  </template>
  <template name="MarginAllSide" value="android:layout_marginTop=&quot;$dimen$&quot;&#10;android:layout_marginStart=&quot;$dimen$&quot;&#10;android:layout_marginEnd=&quot;$dimen$&quot;&#10;android:layout_marginBottom=&quot;$dimen$&quot;" description="MarginAllSide" toReformat="false" toShortenFQNames="true">
    <variable name="dimen" expression="complete()" defaultValue="2dp" alwaysStopAt="true" />
    <context>
      <option name="XML" value="true" />
    </context>
  </template>
  <template name="FocusableTrue" value="android:focusable=&quot;true&quot;&#10;android:clickable=&quot;true&quot;&#10;android:background=&quot;@android:color/white&quot;" description="Focusable True Clickable True and Background White" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="XML" value="true" />
    </context>
  </template>
  <template name="GettingCurrentDate" value="fun currentDate(patternFormat: String): String? {&#10;    return SimpleDateFormat(patternFormat, Locale.ENGLISH).format(Calendar.getInstance().time)&#10;}" description="Get Current Date With Week Name (EEEE dd/MM/yyyy )" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="GettingCurrentTime" value="@SuppressLint(&quot;SimpleDateFormat&quot;)&#10;fun currentTime(mCommonTimeFormat: String): String? {&#10;return SimpleDateFormat(mCommonTimeFormat).format(Calendar.getInstance().time)&#10;}" description="Get Current time with pattern" toReformat="false" toShortenFQNames="true" />
  <template name="GettingDateAccordingMilliSeconds" value="//get you date with Format by milliseconds &#10;private fun getDateByMilliSeconds(timeMilliSecond:Long,mCommonTimeFormat: String): String {&#10;        return SimpleDateFormat(mCommonTimeFormat,Locale.ENGLISH).format(timeMilliSecond)&#10;}" description="Getting Date According to MilliSeconds" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="GettingDateAccordingDateFormate" value="//get you date with Format by Date&#10;private fun getDateByDateVariable(timeMilliSecond:Date,mCommonTimeFormat: String): String {&#10;        return SimpleDateFormat(mCommonTimeFormat,Locale.ENGLISH).format(timeMilliSecond)&#10;}" description="Getting Date According to Date Formate" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="DatePickerDialog" value="private fun datePickerDialog() {&#10;    val cal = Calendar.getInstance()&#10;    // create an OnDateSetListener&#10;    val dateSetListener = DatePickerDialog.OnDateSetListener { view, year, monthOfYear, dayOfMonth -&gt;&#10;        cal.set(Calendar.YEAR, year)&#10;        cal.set(Calendar.MONTH, monthOfYear)&#10;        cal.set(Calendar.DAY_OF_MONTH, dayOfMonth)&#10;        currentDate = cal.time&#10;        txt_admin_date!!.text = mBaseActivity!!.getDateByMilliSeconds(cal.time, Constant.mDateDateFormatDD)&#10;    }&#10;    DatePickerDialog(context!!, dateSetListener, cal.get(Calendar.YEAR), cal.get(Calendar.MONTH), cal.get(Calendar.DAY_OF_MONTH)).show()&#10;}" description="Open Date Picker Dialog Current Date" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="ClassMVVMAdapter" value="&#10;import android.os.Bundle&#10;import android.view.*&#10;import $PACKAGE_NAME$.R&#10;import $PACKAGE_NAME$.base.BaseFragment&#10;import androidx.recyclerview.widget.LinearLayoutManager&#10;&#10;class $FragmentName$Fragment : BaseFragment() {&#10;&#10;&#9;var mAdapter: $FragmentName$Adapter? = null&#10;&#9;private var mArrayList = ArrayList&lt;$ClassName$&gt;()&#10;&#10;    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? {&#10;        return inflater.inflate(R.layout.fragment_$FragmentLayout$, container, false)&#10;    }&#10;&#10;&#10;&#9;override fun onActivityCreated(savedInstanceState: Bundle?) {&#10;&#9;&#9;super.onActivityCreated(savedInstanceState)&#10;&#9;&#9;init()&#10;&#9;}&#10;&#9;&#10;&#9;private fun init() {&#10;&#9;&#9;initRecyclerView()&#10;&#9;}&#10;&#10;&#9;private fun initRecyclerView() {&#10;&#9;&#9;val layoutManager = LinearLayoutManager(this)&#10;&#9;&#9;$rv$.layoutManager = layoutManager&#10;&#9;&#9;mAdapter = $FragmentName$Adapter(this, mArrayList, object : $FragmentName$Adapter.ItemClickListener {&#10;&#9;&#9;&#9;override fun itemClick(position: Int) {&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;})&#10;&#9;&#9;$rv$.adapter = mAdapter&#10;&#9;&#9;mAdapter!!.notifyDataSetChanged()&#10;&#9;}&#10;}&#10;&#10;&#10;package $PACKAGE_NAME$&#10;&#10;import android.content.Context&#10;import android.view.LayoutInflater&#10;import android.view.View&#10;import android.view.ViewGroup&#10;import androidx.databinding.DataBindingUtil&#10;import androidx.recyclerview.widget.RecyclerView&#10; import androidx.appcompat.widget.AppCompatTextView&#10;&#10;/**&#10; * Created by Abhin.&#10; */&#10;class $FragmentName$Adapter(val mContext: Context, var mList: List&lt;$ClassName$&gt;, var mItemClickListener: ItemClickListener) : RecyclerView.Adapter&lt;$FragmentName$Adapter.$FragmentName$AdapterViewHolder&gt;() {&#10;&#10;&#9;var binding: $BindingClass$? = null //Which declare in Xml &lt;Data Class=&quot;*&quot;&gt; &#10;&#10;    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): $FragmentName$AdapterViewHolder {&#10;        binding = DataBindingUtil.inflate(LayoutInflater.from(parent.context), R.layout.$layoutName$, parent, false)&#10;        return $FragmentName$AdapterViewHolder(binding)&#10;    }&#10;&#10;    override fun getItemCount(): Int {&#10;        return mList.size&#10;    }&#10;&#10;    override fun onBindViewHolder(holder: $FragmentName$AdapterViewHolder, position: Int) {&#10;        val mData = mList[position]&#10;        holder.mName.text = mData&#10;&#9;&#9;holder.bind(mData, mContext)&#10;        holder.itemView.setOnClickListener {&#10;            mItemClickListener.itemClick(position)&#10;        }&#10;    }&#10;&#10;    class $FragmentName$AdapterViewHolder(var binding: $BindingClass$?) : RecyclerView.ViewHolder(binding!!.root) {&#10;&#9;&#9;private val viewModel = $FragmentName$AdapterBinding() //ViewModel Class for binding &#10;        fun bind(m$ClassName$: $ClassName$, mContext: Context) {&#10;            viewModel.bind(m$ClassName$, mContext)&#10;            binding!!.viewmodel= viewModel&#10;        }&#10;        val mName = itemView.findViewById&lt;AppCompatTextView&gt;(R.id.$layoutTextView$)!!&#10;    }&#10;&#10;    interface ItemClickListener {&#10;        fun itemClick(position: Int)&#10;    }&#10;}&#10;&#10;&#10;&#10;import android.content.Context&#10;import androidx.lifecycle.MutableLiveData&#10;import $PACKAGE_NAME$.base.BaseViewModel&#10;&#10;/**&#10; * Created by Abhin.&#10; * live data binding class bind the data in view&#10; */&#10;class $FragmentName$AdapterBinding : BaseViewModel() {&#10;&#10;    private val imageUrl = MutableLiveData&lt;String&gt;()&#10;    private val mName = MutableLiveData&lt;String&gt;()&#10;&#10;    fun bind(m$ClassName$: $ClassName$, mContext: Context) {&#10;        imageUrl.value = m$ClassName$.image&#10;        mName.value = m$ClassName$.firstName&#10;    }&#10;&#10;    fun getImageUrl(): MutableLiveData&lt;String&gt; {&#10;        return imageUrl&#10;    }&#10;&#10;    fun getName(): MutableLiveData&lt;String&gt; {&#10;        return mName&#10;    }&#10;}" description="Adapter with Mvvm" toReformat="false" toShortenFQNames="true">
    <variable name="PACKAGE_NAME" expression="kotlinPackageName()" defaultValue="" alwaysStopAt="true" />
    <variable name="FragmentName" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="true" />
    <variable name="ClassName" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="FragmentLayout" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="rv" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="BindingClass" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="layoutName" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="layoutTextView" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="ClassMvvmDetail" value="import android.os.Bundle&#10;import android.view.*&#10;import $PACKAGE_NAME$.R&#10;import $PACKAGE_NAME$.base.BaseFragment&#10;import $PACKAGE_NAME$.util.Constant&#10;import androidx.recyclerview.widget.LinearLayoutManager&#10;import androidx.databinding.DataBindingUtil&#10;import androidx.lifecycle.Observer&#10;import androidx.lifecycle.ViewModelProviders&#10;import com.justcodenow.reportingapp.data.viewModelBaseContext.BaseContext&#10;import android.util.Log&#10;&#10;/**&#10; * Created by Abhin.&#10; */&#10;&#10;class $FragmentName$Fragment : BaseFragment() {&#10;&#10;&#9;var mAdapter: $FragmentName$Adapter? = null&#10;&#9;private var mArrayList = ArrayList&lt;$ClassName$&gt;()&#10;&#9;private var binding: $BindingClass$? = null //Which declare in Xml &lt;Data Class=&quot;*&quot;&gt; &#10;&#9;lateinit var m$FragmentName$ViewModel: $FragmentName$ViewModel //Api Call View Model&#10;&#10;    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? {&#10;&#9;&#9;binding = DataBindingUtil.inflate(inflater, R.layout.R.layout.fragment_$FragmentLayout$, container, false)&#10;        return binding&#10;    }&#10;&#10;&#9;  override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;        m$FragmentName$ViewModel = ViewModelProviders.of(this, BaseContext(mBaseActivity!!)).get($FragmentName$ViewModel::class.java)&#10;        initObserver()&#10;    }&#10;&#9;&#10;&#9;private fun initObserver() {&#10;        mGitDataViewModel.getDataResponse().observe(this, Observer {&#10;            if (it != null) {&#10;               Log.d(Constant.Tag, Gson().toJson(it))&#10;                binding.m$FragmentName$Binding=$FragmentName$Binding() //ViewModel Class for binding &#10;&#9;&#9;&#9;&#9;binding.m$FragmentName$Binding?.bind(it, context!!)                              &#10;            }&#10;        })&#10;    }&#10;&#10;&#10;&#9;override fun onActivityCreated(savedInstanceState: Bundle?) {&#10;&#9;&#9;super.onActivityCreated(savedInstanceState)&#10;&#9;&#9;init()&#10;&#9;}&#10;&#9;&#10;&#9;private fun init() {&#10;&#9;&#9;m$FragmentName$ViewModel.getData()&#10;&#9;}&#10;}&#10;&#10;package $PACKAGE_NAME$&#10;&#10;import androidx.lifecycle.MutableLiveData&#10;import $PACKAGE_NAME$.base.BaseActivity&#10;import $PACKAGE_NAME$.base.BaseViewModel&#10;import $PACKAGE_NAME$.data.model.response.gitResponse&#10;import $PACKAGE_NAME$.data.remote.APIClient&#10;import $PACKAGE_NAME$.data.remote.RetrofitInterface&#10;import retrofit2.Call&#10;import retrofit2.Callback&#10;import retrofit2.Response&#10;&#10;/**&#10; * Created by Abhin.&#10; */&#10; &#10;class $FragmentName$ViewModel(var mBaseActivity: BaseActivity) : BaseViewModel() {&#10;    private var m$ClassName$ = MutableLiveData&lt;$ClassName$&gt;()&#10;    val apiServices = APIClient().getClient(mBaseActivity).create(RetrofitInterface::class.java)&#10;&#10;    //Call Api  &#10;    fun getData() {&#10;        onProgressShow(mBaseActivity)&#10;        val call = apiServices.getData()&#10;        call.enqueue(object : Callback&lt;$ClassName$&gt; {&#10;            override fun onResponse(call: Call&lt;$ClassName$&gt;, response: Response&lt;$ClassName$&gt;) {&#10;                onProgressHide()&#10;                if (response.isSuccessful) {&#10;                    m$ClassName$.value = response.body()&#10;                }&#10;            }&#10;&#10;            override fun onFailure(call: Call&lt;$ClassName$&gt;, t: Throwable) {&#10;                onProgressHide()&#10;            }&#10;        })&#10;    }&#10;&#10;&#9;//Get Response form here &#10;    fun getDataResponse(): MutableLiveData&lt;$ClassName$&gt; {&#10;        return m$ClassName$&#10;    }&#10;}&#10;&#10;&#10;&#10;import android.content.Context&#10;import androidx.lifecycle.MutableLiveData&#10;import com.justcodenow.mvvmdemo.base.BaseViewModel&#10;&#10;/**&#10; * Created by Abhin.&#10; * live data binding class bind the data in view&#10; */&#10;class $FragmentName$Binding : BaseViewModel() {&#10;&#10;    private val imageUrl = MutableLiveData&lt;String&gt;()&#10;    private val mName = MutableLiveData&lt;String&gt;()&#10;&#10;    fun bind(m$ClassName$: $ClassName$, mContext: Context) {&#10;        imageUrl.value = m$ClassName$.image&#10;        mName.value = m$ClassName$.firstName&#10;    }&#10;&#10;    fun getImageUrl(): MutableLiveData&lt;String&gt; {&#10;        return imageUrl&#10;    }&#10;&#10;    fun getName(): MutableLiveData&lt;String&gt; {&#10;        return mName&#10;    }&#10;}&#10;&#10;&#10;&#10;&#10;" description="" toReformat="false" toShortenFQNames="true">
    <variable name="PACKAGE_NAME" expression="kotlinPackageName()" defaultValue="" alwaysStopAt="true" />
    <variable name="FragmentName" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="true" />
    <variable name="ClassName" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="BindingClass" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="FragmentLayout" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="Style" value="&#10;    &lt;style name=&quot;AppTheme.AppBarOverlay&quot; parent=&quot;ThemeOverlay.AppCompat.Dark.ActionBar&quot; /&gt;&#10;&#10;    &lt;style name=&quot;AppTheme.PopupOverlay&quot; parent=&quot;ThemeOverlay.AppCompat.Light&quot; /&gt;" description="Style" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="XML" value="true" />
    </context>
  </template>
  <template name="Style Theme" value="&lt;!-- theme black --&gt;&#10;&lt;style name=&quot;AppTheme.AppThemeBlack&quot;&gt;&#10;    &lt;item name=&quot;colorPrimary&quot;&gt;@color/colorPrimaryBlack&lt;/item&gt;&#10;    &lt;item name=&quot;colorPrimaryDark&quot;&gt;@color/colorPrimaryDarkBlack&lt;/item&gt;&#10;    &lt;item name=&quot;colorAccent&quot;&gt;@color/colorAccentBlack&lt;/item&gt;&#10;&lt;/style&gt;&#10;&#10;&lt;!-- theme blue--&gt;&#10;&lt;style name=&quot;AppTheme.AppThemeBlue&quot;&gt;&#10;    &lt;item name=&quot;colorPrimary&quot;&gt;@color/colorPrimaryBlue&lt;/item&gt;&#10;    &lt;item name=&quot;colorPrimaryDark&quot;&gt;@color/colorPrimaryDarkBlue&lt;/item&gt;&#10;    &lt;item name=&quot;colorAccent&quot;&gt;@color/colorAccentBlue&lt;/item&gt;&#10;&lt;/style&gt;&#10;&#10;&lt;!-- theme BlueGreen--&gt;&#10;&lt;style name=&quot;AppTheme.AppThemeBlueGreen&quot;&gt;&#10;    &lt;item name=&quot;colorPrimary&quot;&gt;@color/colorPrimaryBlueGreen&lt;/item&gt;&#10;    &lt;item name=&quot;colorPrimaryDark&quot;&gt;@color/colorPrimaryDarkBlueGreen&lt;/item&gt;&#10;    &lt;item name=&quot;colorAccent&quot;&gt;@color/colorAccentBlueGreen&lt;/item&gt;&#10;&lt;/style&gt;&#10;&#10;&lt;!-- theme GreyBlue--&gt;&#10;&lt;style name=&quot;AppTheme.AppThemeGreyBlue&quot;&gt;&#10;    &lt;item name=&quot;colorPrimary&quot;&gt;@color/colorPrimaryGreyBlue&lt;/item&gt;&#10;    &lt;item name=&quot;colorPrimaryDark&quot;&gt;@color/colorPrimaryDarkGreyBlue&lt;/item&gt;&#10;    &lt;item name=&quot;colorAccent&quot;&gt;@color/colorAccentGreyBlue&lt;/item&gt;&#10;&lt;/style&gt;&#10;&#10;&lt;!-- theme pink--&gt;&#10;&lt;style name=&quot;AppTheme.AppThemePink&quot;&gt;&#10;    &lt;item name=&quot;colorPrimary&quot;&gt;@color/colorPrimaryPink&lt;/item&gt;&#10;    &lt;item name=&quot;colorPrimaryDark&quot;&gt;@color/colorPrimaryDarkPink&lt;/item&gt;&#10;    &lt;item name=&quot;colorAccent&quot;&gt;@color/colorAccentPink&lt;/item&gt;&#10;&lt;/style&gt;&#10;&#10;&lt;!-- theme Yellow--&gt;&#10;&lt;style name=&quot;AppTheme.AppThemeYellow&quot;&gt;&#10;    &lt;item name=&quot;colorPrimary&quot;&gt;@color/colorPrimaryYellow&lt;/item&gt;&#10;    &lt;item name=&quot;colorPrimaryDark&quot;&gt;@color/colorPrimaryDarkYellow&lt;/item&gt;&#10;    &lt;item name=&quot;colorAccent&quot;&gt;@color/colorAccentYellow&lt;/item&gt;&#10;&lt;/style&gt;&#10;&#10;&lt;!-- theme Red--&gt;&#10;&lt;style name=&quot;AppTheme.AppThemeRed&quot;&gt;&#10;    &lt;item name=&quot;colorPrimary&quot;&gt;@color/colorPrimaryRed&lt;/item&gt;&#10;    &lt;item name=&quot;colorPrimaryDark&quot;&gt;@color/colorPrimaryDarkRed&lt;/item&gt;&#10;    &lt;item name=&quot;colorAccent&quot;&gt;@color/colorAccentRed&lt;/item&gt;&#10;&lt;/style&gt;&#10;&lt;!-- theme Green--&gt;&#10;&lt;style name=&quot;AppTheme.AppThemeGreen&quot;&gt;&#10;    &lt;item name=&quot;colorPrimary&quot;&gt;@color/colorPrimaryGreen&lt;/item&gt;&#10;    &lt;item name=&quot;colorPrimaryDark&quot;&gt;@color/colorPrimaryDarkGreen&lt;/item&gt;&#10;    &lt;item name=&quot;colorAccent&quot;&gt;@color/colorAccentGreen&lt;/item&gt;&#10;&lt;/style&gt;&#10;&lt;!-- theme Purple--&gt;&#10;&lt;style name=&quot;AppTheme.AppThemePurple&quot;&gt;&#10;    &lt;item name=&quot;colorPrimary&quot;&gt;@color/colorPrimaryPurple&lt;/item&gt;&#10;    &lt;item name=&quot;colorPrimaryDark&quot;&gt;@color/colorPrimaryDarkPurple&lt;/item&gt;&#10;    &lt;item name=&quot;colorAccent&quot;&gt;@color/colorAccentPurple&lt;/item&gt;&#10;&lt;/style&gt;" description="Style Theme" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="XML" value="true" />
    </context>
  </template>
  <template name="StyleSplash" value="&lt;style name=&quot;SplashScreen&quot; parent=&quot;Theme.AppCompat.Light.NoActionBar&quot;&gt;&#10;    &lt;item name=&quot;windowActionBar&quot;&gt;false&lt;/item&gt;&#10;    &lt;item name=&quot;windowNoTitle&quot;&gt;true&lt;/item&gt;&#10;    &lt;item name=&quot;colorPrimary&quot;&gt;@color/PinkRoseLight&lt;/item&gt;&#10;    &lt;item name=&quot;colorPrimaryDark&quot;&gt;@color/PinkRoseDark&lt;/item&gt;&#10;    &lt;item name=&quot;colorAccent&quot;&gt;@color/colorAccent&lt;/item&gt;&#10;    &lt;item name=&quot;android:windowFullscreen&quot;&gt;true&lt;/item&gt;&#10;&lt;/style&gt;" description="splash Screen Style" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="XML" value="true" />
    </context>
  </template>
  <template name="Style Image" value="&lt;!--image styles--&gt;&#10;&#10;&lt;!--ImageStyle Icon--&gt;&#10;&lt;style name=&quot;ImgIcon&quot;&gt;&#10;    &lt;item name=&quot;android:src&quot;&gt;@drawable/ic_launcher_background&lt;/item&gt;&#10;    &lt;item name=&quot;android:layout_width&quot;&gt;24dp&lt;/item&gt;&#10;    &lt;item name=&quot;android:layout_height&quot;&gt;24dp&lt;/item&gt;&#10;    &lt;item name=&quot;android:layout_margin&quot;&gt;@dimen/dp_4&lt;/item&gt;&#10;&lt;/style&gt;&#10;&#10;&lt;!--ImageStyle IconBig--&gt;&#10;&lt;style name=&quot;ImgIconBig&quot;&gt;&#10;    &lt;item name=&quot;android:src&quot;&gt;@drawable/ic_launcher_background&lt;/item&gt;&#10;    &lt;item name=&quot;android:layout_width&quot;&gt;48dp&lt;/item&gt;&#10;    &lt;item name=&quot;android:layout_height&quot;&gt;48dp&lt;/item&gt;&#10;&lt;/style&gt;&#10;&#10;&#10;&lt;!--ImageStyle SquareSmall--&gt;&#10;&lt;style name=&quot;ImgSquareSmall&quot;&gt;&#10;    &lt;item name=&quot;android:src&quot;&gt;@drawable/ic_launcher_background&lt;/item&gt;&#10;    &lt;item name=&quot;android:layout_width&quot;&gt;74dp&lt;/item&gt;&#10;    &lt;item name=&quot;android:layout_height&quot;&gt;74dp&lt;/item&gt;&#10;&lt;/style&gt;&#10;&#10;&#10;&lt;!--ImageStyle SquareMedium--&gt;&#10;&lt;style name=&quot;ImgSquareMedium&quot;&gt;&#10;    &lt;item name=&quot;android:src&quot;&gt;@drawable/ic_launcher_background&lt;/item&gt;&#10;    &lt;item name=&quot;android:layout_width&quot;&gt;98dp&lt;/item&gt;&#10;    &lt;item name=&quot;android:layout_height&quot;&gt;98dp&lt;/item&gt;&#10;&lt;/style&gt;&#10;&#10;&lt;!--ImageStyle SquareBig--&gt;&#10;&lt;style name=&quot;ImgSquareBig&quot;&gt;&#10;    &lt;item name=&quot;android:src&quot;&gt;@drawable/ic_launcher_background&lt;/item&gt;&#10;    &lt;item name=&quot;android:layout_width&quot;&gt;148dp&lt;/item&gt;&#10;    &lt;item name=&quot;android:layout_height&quot;&gt;148dp&lt;/item&gt;&#10;&lt;/style&gt;&#10;&#10;&lt;!--ImageStyle WideAngle--&gt;&#10;&lt;style name=&quot;ImgWideAngle&quot;&gt;&#10;    &lt;item name=&quot;android:src&quot;&gt;@drawable/ic_launcher_background&lt;/item&gt;&#10;    &lt;item name=&quot;android:layout_width&quot;&gt;match_parent&lt;/item&gt;&#10;    &lt;item name=&quot;android:layout_height&quot;&gt;168dp&lt;/item&gt;&#10;&lt;/style&gt;&#10;" description="Style Image" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="XML" value="true" />
    </context>
  </template>
  <template name="ManifestPermissionInternet" value="android:usesCleartextTraffic=&quot;true&quot;&#10;tools:ignore=&quot;AllowBackup,GoogleAppIndexingWarning,HardcodedDebugMode,UnusedAttribute&quot;" description="Manifest Declartion" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="XML" value="true" />
    </context>
  </template>
  <template name="ManifestPermission" value="&lt;uses-permission android:name=&quot;android.permission.INTERNET&quot;/&gt;&#10;&lt;uses-permission android:name=&quot;android.permission.ACCESS_NETWORK_STATE&quot;/&gt;&#10;&lt;uses-permission android:name=&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;/&gt;&#10;&lt;uses-permission android:name=&quot;android.permission.READ_EXTERNAL_STORAGE&quot;/&gt;&#10;&lt;uses-permission android:name=&quot;android.permission.CAMERA&quot;/&gt;" description="Manifest Permission" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="XML" value="true" />
    </context>
  </template>
  <template name="SplashScreenManifest" value="&lt;activity&#10;        android:name=&quot;.splashActivity.SplashScreen&quot;&#10;        android:label=&quot;@string/app_name&quot;&#10;        android:theme=&quot;@style/AppTheme.NoActionBar&quot;&gt;&#10;    &lt;intent-filter&gt;&#10;        &lt;action android:name=&quot;android.intent.action.MAIN&quot;/&gt;&#10;        &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot;/&gt;&#10;    &lt;/intent-filter&gt;&#10;&lt;/activity&gt;" description="Manifest Splash" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="XML" value="true" />
    </context>
  </template>
  <template name="ConstaintLayoutCenter" value="app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;app:layout_constraintTop_toTopOf=&quot;parent&quot;" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="XML" value="true" />
    </context>
  </template>
  <template name="IdRv" value="android:id=&quot;@+id/rv_$item$&quot;" description="rv" toReformat="false" toShortenFQNames="true">
    <variable name="item" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="XML" value="true" />
    </context>
  </template>
  <template name="RecyclerView" value="&lt;androidx.recyclerview.widget.RecyclerView&#10;android:id=&quot;@+id/rv_dashboard&quot;&#10;android:layout_width=&quot;match_parent&quot;&#10;android:layout_height=&quot;match_parent&quot;&#10;app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;app:layout_constraintTop_toTopOf=&quot;parent&quot; /&gt;" description="recyclerview" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="XML" value="true" />
    </context>
  </template>
  <template name="IdImg" value="android:id=&quot;@+id/img_$item$&quot;" description="img" toReformat="false" toShortenFQNames="true">
    <variable name="item" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="XML" value="true" />
    </context>
  </template>
  <template name="IdTxt" value="android:id=&quot;@+id/txt_$item$&quot;" description="text" toReformat="false" toShortenFQNames="true">
    <variable name="item" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="XML" value="true" />
    </context>
  </template>
  <template name="StyleTextHeader" value="&lt;style name=&quot;$TxtHeader$&quot;&gt;&#10;    &lt;item name=&quot;android:layout_width&quot;&gt;wrap_content&lt;/item&gt;&#10;    &lt;item name=&quot;android:layout_height&quot;&gt;wrap_content&lt;/item&gt;&#10;    &lt;item name=&quot;android:fontFamily&quot; tools:ignore=&quot;NewApi&quot;&gt;@font/roboto_bold&lt;/item&gt;&#10;    &lt;item name=&quot;android:textColor&quot;&gt;@android:color/white&lt;/item&gt;&#10;    &lt;item name=&quot;android:maxLines&quot;&gt;1&lt;/item&gt;&#10;    &lt;item name=&quot;android:ellipsize&quot;&gt;end&lt;/item&gt;&#10;    &lt;item name=&quot;android:textSize&quot;&gt;@dimen/sp_22&lt;/item&gt;&#10;    &lt;item name=&quot;android:textStyle&quot;&gt;bold&lt;/item&gt;&#10;    &lt;item name=&quot;android:layout_gravity&quot;&gt;center_vertical&lt;/item&gt;&#10;    &lt;item name=&quot;android:layout_marginStart&quot;&gt;@dimen/dp_30&lt;/item&gt;&#10;    &lt;item name=&quot;android:layout_marginLeft&quot;&gt;@dimen/dp_30&lt;/item&gt;&#10;&lt;/style&gt;" description="header" toReformat="false" toShortenFQNames="true">
    <variable name="TxtHeader" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="XML" value="true" />
    </context>
  </template>
  <template name="IdFLContainer" value="android:id=&quot;@+id/fl_$Container$&quot;" description="text" toReformat="true" toShortenFQNames="true">
    <variable name="Container" expression="complete()" defaultValue="Container" alwaysStopAt="true" />
    <context>
      <option name="XML" value="true" />
    </context>
  </template>
  <template name="ClassBaseTabLayout" value="import android.os.Bundle&#10;import android.view.LayoutInflater&#10;import android.view.View&#10;import android.view.ViewGroup&#10;import $PACKAGE_NAME$.R&#10;import $PACKAGE_NAME$.base.BaseFragment&#10;&#10;class $FragmentName$Fragment : BaseFragment() {&#10;    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? {&#10;        return inflater.inflate(R.layout.fragment_$FragmentLayout$, container, false)&#10;    }&#10;    &#10;    override fun onActivityCreated(savedInstanceState: Bundle?) {&#10;        super.onActivityCreated(savedInstanceState)&#10;        init()&#10;    }&#10;&#10;    private fun init() {&#10;&#9;&#9;val fragmentAdapter = $PagerAdapter$(childFragmentManager)&#10;        vp_$dashboard$.adapter = fragmentAdapter&#10;        tab_$dashboard$.setupWithViewPager(vp_$dashboard$)&#10;    }&#10;}&#10;&#10;&#10;import androidx.fragment.app.Fragment&#10;import androidx.fragment.app.FragmentManager&#10;import androidx.fragment.app.FragmentPagerAdapter&#10;&#10;class $PagerAdapter$(fm: FragmentManager) : FragmentPagerAdapter(fm) {&#10;&#10;    override fun getItem(position: Int): Fragment {&#10;        return when (position) {&#10;            0 -&gt; {&#10;                $FirstFragment$()&#10;            }&#10;            else -&gt; {&#10;                return $SecondFragment$()&#10;            }&#10;        }&#10;    }&#10;&#10;    override fun getCount(): Int {&#10;        return 2&#10;    }&#10;&#10;    override fun getPageTitle(position: Int): CharSequence {&#10;        return when (position) {&#10;            0 -&gt; &quot;$FirstFragment$&quot;&#10;            else -&gt; {&#10;                return &quot;$SecondFragment$&quot;&#10;            }&#10;        }&#10;    }&#10;}" description="Fragment With Class" toReformat="true" toShortenFQNames="true">
    <variable name="PACKAGE_NAME" expression="kotlinPackageName()" defaultValue="" alwaysStopAt="true" />
    <variable name="FragmentName" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="true" />
    <variable name="FragmentLayout" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="PagerAdapter" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="dashboard" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="FirstFragment" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="SecondFragment" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="ClassMvvmCall" value="import android.os.Bundle&#10;import android.view.*&#10;import $PACKAGE_NAME$.R&#10;import $PACKAGE_NAME$.base.BaseFragment&#10;import $PACKAGE_NAME$.util.Constant&#10;import androidx.recyclerview.widget.LinearLayoutManager&#10;import androidx.databinding.DataBindingUtil&#10;import androidx.lifecycle.Observer&#10;import androidx.lifecycle.ViewModelProviders&#10;import $PACKAGE_NAME$.data.viewModelBaseContext.BaseContext&#10;import android.util.Log&#10;import com.google.gson.Gson&#10;&#10;&#10;/**&#10; * Created by Abhin.&#10; */&#10;&#10;class $FragmentName$Fragment : BaseFragment() {&#10;&#10;&#9;private var mArrayList = ArrayList&lt;$ClassName$&gt;()&#10;&#9;lateinit var m$FragmentName$ViewModel: $FragmentName$ViewModel //Api Call View Model&#10;&#10;    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? {&#10;&#9;&#9;return inflater.inflate(R.layout.fragment_$FragmentLayout$, container, false)&#10;    }&#10;&#10;&#9;  override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;        m$FragmentName$ViewModel = ViewModelProviders.of(this, BaseContext(mBaseActivity!!)).get($FragmentName$ViewModel::class.java)&#10;        initObserver()&#10;    }&#10;&#9;&#10;&#9;private fun initObserver() {&#10;        m$FragmentName$ViewModel.getDataResponse().observe(this, Observer {&#10;            if (it != null) {&#10;               Log.d(Constant.Tag, Gson().toJson(it))                    &#10;            }&#10;        })&#10;    }&#10;&#10;&#10;&#9;override fun onActivityCreated(savedInstanceState: Bundle?) {&#10;&#9;&#9;super.onActivityCreated(savedInstanceState)&#10;&#9;&#9;init()&#10;&#9;}&#10;&#9;&#10;&#9;private fun init() {&#10;&#9;&#9;m$FragmentName$ViewModel.getData()&#10;&#9;}&#10;}&#10;&#10;package $PACKAGE_NAME$&#10;&#10;import androidx.lifecycle.MutableLiveData&#10;import $PACKAGE_NAME$.base.BaseActivity&#10;import $PACKAGE_NAME$.base.BaseViewModel&#10;import $PACKAGE_NAME$.data.remote.APIClient&#10;import $PACKAGE_NAME$.data.remote.RetrofitInterface&#10;import retrofit2.Call&#10;import retrofit2.Callback&#10;import retrofit2.Response&#10;&#10;/**&#10; * Created by Abhin.&#10; */&#10; &#10;class $FragmentName$ViewModel(var mBaseActivity: BaseActivity) : BaseViewModel() {&#10;    private var m$ClassName$ = MutableLiveData&lt;$ClassName$&gt;()&#10;    val apiServices = APIClient().getClient(mBaseActivity).create(RetrofitInterface::class.java)&#10;&#10;    //Call Api  &#10;    fun getData() {&#10;        onProgressShow(mBaseActivity)&#10;        val call = apiServices.getData()&#10;        call.enqueue(object : Callback&lt;$ClassName$&gt; {&#10;            override fun onResponse(call: Call&lt;$ClassName$&gt;, response: Response&lt;$ClassName$&gt;) {&#10;                onProgressHide()&#10;                if (response.isSuccessful) {&#10;                    m$ClassName$.value = response.body()&#10;                }&#10;            }&#10;&#10;            override fun onFailure(call: Call&lt;$ClassName$&gt;, t: Throwable) {&#10;                onProgressHide()&#10;            }&#10;        })&#10;    }&#10;&#10;&#9;//Get Response form here &#10;    fun getDataResponse(): MutableLiveData&lt;$ClassName$&gt; {&#10;        return m$ClassName$&#10;    }&#10;}&#10;&#10;&#10;&#10;&#10;" description="Perfectly done mvvm Call only" toReformat="false" toShortenFQNames="true">
    <variable name="PACKAGE_NAME" expression="kotlinPackageName()" defaultValue="" alwaysStopAt="true" />
    <variable name="FragmentName" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="true" />
    <variable name="ClassName" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="FragmentLayout" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="Glide" value="Glide.with(mContext).load($ImageUrl$).into(holder.$imgFlag$)" description="" toReformat="false" toShortenFQNames="true">
    <variable name="ImageUrl" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="imgFlag" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="OnBackPress" value="private var doubleBackToExitPressedOnce: Boolean = false&#10;@SuppressLint(&quot;NewApi&quot;)&#10;override fun onBackPressed() {&#10;    if (supportFragmentManager.backStackEntryCount &gt; 0) {&#10;        supportFragmentManager.popBackStack()&#10;    } else if (!doubleBackToExitPressedOnce) {&#10;        doubleBackToExitPressedOnce = true&#10;        showError(resources.getString(R.string.msg_press_back_to_exit))&#10;        Handler().postDelayed(Runnable { doubleBackToExitPressedOnce = false }, 2000)&#10;    } else {&#10;        super.onBackPressed()&#10;        finishAffinity()&#10;    }&#10;}" description="Double press to Exit" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="forLoop" value="for ((i, e) in $arrayList$.withIndex()) {&#10;&#10;}" description="" toReformat="false" toShortenFQNames="true">
    <variable name="arrayList" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="logD" value="Log.d(Constant.Tag,&quot;$test$&quot;)" description="Log.d" toReformat="false" toShortenFQNames="true">
    <variable name="test" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="logE" value="Log.e(Constant.Tag,&quot;$test$&quot;)" description="Log.e" toReformat="false" toShortenFQNames="true">
    <variable name="test" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="StyleHeaderTextview" value="&lt;!--textViewStyle $Header$--&gt;&#10;&lt;style name=&quot;TxtHeader&quot;&gt;&#10;    &lt;item name=&quot;android:layout_width&quot;&gt;wrap_content&lt;/item&gt;&#10;    &lt;item name=&quot;android:layout_height&quot;&gt;wrap_content&lt;/item&gt;&#10;    &lt;item name=&quot;android:fontFamily&quot; tools:ignore=&quot;NewApi&quot;&gt;$roboto_bold$&lt;/item&gt;&#10;    &lt;item name=&quot;android:textColor&quot;&gt;$color$&lt;/item&gt;&#10;    &lt;item name=&quot;android:maxLines&quot;&gt;1&lt;/item&gt;&#10;    &lt;item name=&quot;android:ellipsize&quot;&gt;end&lt;/item&gt;&#10;    &lt;item name=&quot;android:textSize&quot;&gt;$Size$&lt;/item&gt;&#10;    &lt;item name=&quot;android:textStyle&quot;&gt;bold&lt;/item&gt;&#10;    &lt;item name=&quot;android:layout_gravity&quot;&gt;center&lt;/item&gt;&#10;&lt;/style&gt;" description="TextView Header Style" toReformat="false" toShortenFQNames="true">
    <variable name="Header" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="roboto_bold" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="color" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="Size" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="XML" value="true" />
    </context>
  </template>
  <template name="StyleDesTextView" value="&lt;!--textViewStyle $Header$--&gt;&#10;&lt;style name=&quot;TxtHeader&quot;&gt;&#10;    &lt;item name=&quot;android:layout_width&quot;&gt;wrap_content&lt;/item&gt;&#10;    &lt;item name=&quot;android:layout_height&quot;&gt;wrap_content&lt;/item&gt;&#10;    &lt;item name=&quot;android:fontFamily&quot; tools:ignore=&quot;NewApi&quot;&gt;$roboto_bold$&lt;/item&gt;&#10;    &lt;item name=&quot;android:textColor&quot;&gt;$color$&lt;/item&gt;&#10;    &lt;item name=&quot;android:textSize&quot;&gt;$Size$&lt;/item&gt;&#10;&lt;/style&gt;" description="TextView Des Style" toReformat="false" toShortenFQNames="true">
    <variable name="Header" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="roboto_bold" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="color" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="Size" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="XML" value="true" />
    </context>
  </template>
  <template name="LayoutNoInternetConnection" value="&lt;androidx.constraintlayout.widget.ConstraintLayout &#10;        xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;        android:id=&quot;@+id/ll_internet_connection&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot;&#10;        android:background=&quot;@color/colorPrimary&quot;&#10;        android:gravity=&quot;center&quot;&#10;        android:orientation=&quot;vertical&quot;&gt;&#10;&#10;        &lt;androidx.appcompat.widget.AppCompatImageView&#10;            android:id=&quot;@+id/appCompatImageView2&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:src=&quot;@drawable/ic_signal_wifi_off_black_24dp&quot;&#10;            app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;            app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;            app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;            app:layout_constraintTop_toTopOf=&quot;parent&quot; /&gt;&#10;&#10;        &lt;androidx.appcompat.widget.AppCompatTextView&#10;            android:id=&quot;@+id/txt_no_internet_found&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginTop=&quot;@dimen/dp_8&quot;&#10;            android:text=&quot;No Internet connection&quot;&#10;            android:textColor=&quot;@android:color/white&quot;&#10;            android:textSize=&quot;@dimen/sp_22&quot;&#10;            android:textStyle=&quot;bold&quot;&#10;            app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;            app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;            app:layout_constraintTop_toBottomOf=&quot;@+id/appCompatImageView2&quot; /&gt;&#10;&#10;        &lt;androidx.appcompat.widget.AppCompatButton&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginTop=&quot;@dimen/dp_16&quot;&#10;            android:background=&quot;@color/colorPrimaryDark&quot;&#10;            android:padding=&quot;@dimen/dp_16&quot;&#10;            android:text=&quot;Try again&quot;&#10;            android:textColor=&quot;@android:color/white&quot;&#10;            app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;            app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;            app:layout_constraintTop_toBottomOf=&quot;@+id/txt_no_internet_found&quot; /&gt;&#10;&#10;&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;" description="No internet Connection" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="XML" value="true" />
    </context>
  </template>
  <template name="SplashActivity" value=" startActivity(Intent(this@$SplashScreen$, $MainActivity$::class.java))&#10; this@$SplashScreen$.finish()" description="Transfer Screen" toReformat="false" toShortenFQNames="true">
    <variable name="SplashScreen" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="MainActivity" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="LayoutProfilePicAndName" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.constraintlayout.widget.ConstraintLayout&#10;    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:layout_margin=&quot;@dimen/dp_4&quot;&#10;    android:gravity=&quot;center&quot;&#10;    android:orientation=&quot;horizontal&quot;&gt;&#10;&#10;    &lt;androidx.appcompat.widget.AppCompatImageView&#10;        android:id=&quot;@+id/img_$profile$&quot;&#10;        android:layout_width=&quot;@dimen/dp_50&quot;&#10;        android:layout_height=&quot;@dimen/dp_50&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot;&#10;        tools:src=&quot;@tools:sample/avatars&quot; /&gt;&#10;&#10;    &lt;androidx.appcompat.widget.AppCompatTextView&#10;        android:id=&quot;@+id/txt_$name$&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_margin=&quot;@dimen/dp_8&quot;&#10;        android:textAppearance=&quot;?attr/textAppearanceListItem&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toEndOf=&quot;@id/img_$profile$&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot;&#10;        tools:text=&quot;@tools:sample/first_names&quot; /&gt;&#10;&#10;&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;&#10;" description="profile and name only" toReformat="false" toShortenFQNames="true">
    <variable name="profile" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="name" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="XML" value="true" />
    </context>
  </template>
  <template name="LayoutButtonTest" value="&lt;androidx.appcompat.widget.AppCompatButton&#10;            android:id=&quot;@+id/btn_test&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:gravity=&quot;center&quot;&#10;            android:layout_gravity=&quot;center&quot;&#10;            android:text=&quot;test&quot;&#10;            android:textColor=&quot;@android:color/white&quot;&#10;            android:background=&quot;@color/GrassDark&quot;&#10;            android:layout_height=&quot;wrap_content&quot;/&gt;" description="Test Button green" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="XML" value="true" />
    </context>
  </template>
  <template name="forLoop1..5" value="for (i in 1..5) {&#10;            &#10;}" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="IdBtn" value="android:id=&quot;@+id/btn_$item$&quot;" description="id button" toReformat="false" toShortenFQNames="true">
    <variable name="item" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="XML" value="true" />
    </context>
  </template>
  <template name="Id_ll" value="android:id=&quot;@+id/ll_$Container$&quot;" description="LinearLayout" toReformat="true" toShortenFQNames="true">
    <variable name="Container" expression="complete()" defaultValue="Container" alwaysStopAt="true" />
    <context>
      <option name="XML" value="true" />
    </context>
  </template>
  <template name="LayoutTextView" value="&lt;TextView&#10;    android:id=&quot;@+id/txt_$no_task_found$&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:layout_gravity=&quot;center&quot;&#10;    android:gravity=&quot;center&quot;&#10;    android:text=&quot;$no_task_found$&quot;&#10;    android:textColor=&quot;@color/colorPrimary&quot;&#10;    android:textSize=&quot;@dimen/sp_22&quot;&#10;    android:textStyle=&quot;bold&quot; /&gt;" description="Text View" toReformat="true" toShortenFQNames="true">
    <variable name="no_task_found" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="XML" value="true" />
    </context>
  </template>
  <template name="GsonGetArrayList" value="fun get$ListName$ArrayList(json: String): ArrayList&lt;$File$&gt; {&#10;        val type = object : TypeToken&lt;ArrayList&lt;$File$&gt;&gt;() {}.type&#10;        var m$File$List: ArrayList&lt;$File$&gt; = ArrayList()&#10;        m$File$List = Gson().fromJson(json, type)&#10;        return m$File$List&#10;}" description="getting array list from string" toReformat="false" toShortenFQNames="true">
    <variable name="ListName" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="File" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="GsonToJson" value="var json = Gson().toJson($arrayList$)" description="Getting string of Gson" toReformat="false" toShortenFQNames="true">
    <variable name="arrayList" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="logJson" value="Log.d(Constant.Tag,&quot;--&gt; ${Gson().toJson($test$)}&quot;)" description="Print ArrayList in String" toReformat="false" toShortenFQNames="true">
    <variable name="test" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="GsonToClassObject" value="private fun get$ClassObject$Object (json: String): $ModelClass$ {&#10;&#9;val type = object : TypeToken&lt;$ModelClass$&gt;() {}.type&#10;&#9;return Gson().fromJson(json, type)&#10;}" description="getting Class object from string" toReformat="false" toShortenFQNames="true">
    <variable name="ClassObject" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="ModelClass" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="rxJavaSearch" value="@SuppressLint(&quot;CheckResult&quot;)&#10;private fun rxSearch(searchView: android.widget.SearchView) {&#10;    val sharedTextChanges: Observable&lt;CharSequence&gt; = RxSearchView.queryTextChanges(searchView).share()&#10;    sharedTextChanges.debounce(1000, TimeUnit.MILLISECONDS) // use debounce&#10;        .observeOn(AndroidSchedulers.mainThread()).subscribe { onNext -&gt;&#10;            if (!onNext.isNullOrEmpty()) {&#10;                //code here&#10;            }&#10;        }&#10;}" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="GradleGilde" value="//Glide&#10;implementation 'com.github.bumptech.glide:glide:4.8.0'&#10;annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'" description="Gilde" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="GROOVY" value="true" />
    </context>
  </template>
  <template name="GradleRetrofit" value="//Retrofit&#10;implementation 'com.google.code.gson:gson:2.8.5'&#10;implementation 'com.squareup.retrofit2:retrofit:2.6.0'&#10;implementation 'com.squareup.retrofit2:converter-gson:2.5.0'&#10;implementation 'com.squareup.okhttp3:logging-interceptor:3.14.2'&#10;implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'" description="Retrofit" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="GROOVY" value="true" />
    </context>
  </template>
  <template name="GradleRxJava" value="//Rx Java&#10;implementation &quot;io.reactivex.rxjava2:rxjava:2.2.2&quot;&#10;implementation &quot;io.reactivex.rxjava2:rxandroid:2.1.0&quot;&#10;implementation &quot;com.jakewharton.rxbinding2:rxbinding:2.0.0&quot;&#10;implementation 'com.jakewharton.rxbinding3:rxbinding:3.0.0-alpha2'&#10;implementation 'com.jakewharton.rxbinding3:rxbinding-appcompat:3.0.0-alpha2'" description="Rxjava" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="GROOVY" value="true" />
    </context>
  </template>
  <template name="GradleDesgin" value="//Design&#10;implementation 'com.google.android.material:material:1.1.0-alpha07'&#10;implementation 'androidx.recyclerview:recyclerview:1.0.0'&#10;implementation 'androidx.cardview:cardview:1.0.0'" description="Design" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="GROOVY" value="true" />
    </context>
  </template>
  <template name="GradleEventbus" value="//EventBus&#10;implementation 'org.greenrobot:eventbus:3.1.1'" description="EventBus" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="GROOVY" value="true" />
    </context>
  </template>
  <template name="GradlePalette" value="//Palette&#10;implementation 'com.android.support:palette-v7:28.0.0'&#10;    " description="Palette" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="GROOVY" value="true" />
    </context>
  </template>
  <template name="ApiClient" value="package com.justcodenow.reportingapp.data.remote&#10;&#10;import android.content.Context&#10;import com.google.gson.Gson&#10;import com.google.gson.reflect.TypeToken&#10;import com.jakewharton.retrofit2.adapter.rxjava2.RxJava2CallAdapterFactory&#10;import com.justcodenow.reportingapp.data.model.userList.UserInsertResponse&#10;import com.justcodenow.reportingapp.util.Constant&#10;import okhttp3.Cache&#10;import okhttp3.CacheControl&#10;import okhttp3.Interceptor&#10;import okhttp3.OkHttpClient&#10;import okhttp3.logging.HttpLoggingInterceptor&#10;import retrofit2.Retrofit&#10;import retrofit2.converter.gson.GsonConverterFactory&#10;import java.io.File&#10;import java.util.concurrent.TimeUnit&#10;&#10;/**&#10; * Created by Abhin.&#10; * Api Client for retrofit Instance with Base Url&#10; */&#10;class APIClient {&#10;        var httpCacheDirectory: String = &quot;http-cache&quot;&#10;        var cacheControl: String = &quot;Cache-Control&quot;&#10;    private var mRetrofit: Retrofit? = null&#10;    /**&#10;     * getClient Retorfit instance&#10;     * @param mContext use for store caching&#10;     */&#10;    fun getClient(mContext: Context): Retrofit {&#10;        if (mRetrofit == null) {&#10;            val interceptor = HttpLoggingInterceptor()&#10;            interceptor.level = HttpLoggingInterceptor.Level.BODY&#10;            mRetrofit = Retrofit.Builder().baseUrl(Constant.baseURL).addCallAdapterFactory(RxJava2CallAdapterFactory.create()).addConverterFactory(GsonConverterFactory.create()).client(getOkHttpClient(mContext)).build()&#10;        }&#10;        return mRetrofit!!&#10;    }&#10;&#10;    /**&#10;     * getOkHttpClient&#10;     * @param mContext use for store caches&#10;     */&#10;    private fun getOkHttpClient(mContext: Context): OkHttpClient {&#10;        val cacheSize = 100 * 1024 * 1024 // 10 MB&#10;        val httpCacheDirectory = File(mContext.cacheDir, Constant.httpCacheDirectory)&#10;        val cache = Cache(httpCacheDirectory, cacheSize.toLong())&#10;        val networkCacheInterceptor = Interceptor { chain -&gt;&#10;            val response = chain.proceed(chain.request())&#10;            val cacheControl = CacheControl.Builder().maxAge(2, TimeUnit.HOURS).build()&#10;            response.newBuilder().header(Constant.cacheControl, cacheControl.toString()).build()&#10;        }&#10;        val loggingInterceptor = HttpLoggingInterceptor()&#10;        loggingInterceptor.level = HttpLoggingInterceptor.Level.BODY&#10;        return OkHttpClient.Builder().connectTimeout(3, TimeUnit.MINUTES).readTimeout(90, TimeUnit.SECONDS).writeTimeout(45, TimeUnit.SECONDS).addInterceptor(loggingInterceptor).cache(cache).addNetworkInterceptor(networkCacheInterceptor).build()&#10;    }&#10;&#10;}" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="LayoutFLContainer" value="&lt;FrameLayout&#10;        android:id=&quot;@+id/fl_container&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;        app:layout_constraintLeft_toLeftOf=&quot;parent&quot;&#10;        app:layout_constraintRight_toRightOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot;/&gt;" description="FlContainer" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="XML" value="true" />
    </context>
  </template>
  <template name="GradleJava" value="compileOptions {&#10;    sourceCompatibility JavaVersion.VERSION_1_8  &#10;    targetCompatibility JavaVersion.VERSION_1_8  &#10;}" description="Java" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="GROOVY" value="true" />
    </context>
  </template>
  <template name="GridLayoutManager" value="val layoutManager = GridLayoutManager(context!!, $3$)" description="grid Linear Layout" toReformat="false" toShortenFQNames="true">
    <variable name="3" expression="complete()" defaultValue="3" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="PermissionRunTime" value="private var marshMellowHelper: MarshMellowHelper? = null&#10;private val PERMISSIONS_REQUEST_CODE = 10003&#10;&#10;private fun initRequestPermission()&#10;{&#10;marshMellowHelper=MarshMellowHelper(this,arrayOf(Manifest.permission.CAMERA,Manifest.permission.WRITE_EXTERNAL_STORAGE,Manifest.permission.READ_EXTERNAL_STORAGE),PERMISSIONS_REQUEST_CODE)&#10;&#10;marshMellowHelper!!.request(object : MarshMellowHelper.PermissionCallback {&#10;    override fun onPermissionGranted() {&#10;        //code here&#10;    }&#10;&#10;    override fun onPermissionDenied() {&#10;&#10;    }&#10;&#10;    override fun onPermissionDeniedBySystem() {&#10;&#10;    }&#10;})&#10;}&#10;&#10;override fun onRequestPermissionsResult(requestCode: Int, permissions: Array&lt;String&gt;, grantResults: IntArray) {&#10;    super.onRequestPermissionsResult(requestCode, permissions, grantResults)&#10;    if (marshMellowHelper != null) {&#10;        marshMellowHelper!!.onRequestPermissionsResult(requestCode, permissions, grantResults)&#10;    }&#10;}" description="MashMellowHelperClass" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="ImageGalleryGettingWithPermission" value="     private var marshMellowHelper: MarshMellowHelper? = null&#10;    private val PERMISSIONS_REQUEST_CODE = 10003&#10;&#10; &#10; @SuppressLint(&quot;InlinedApi&quot;)&#10;    private fun initRequestPermission() {&#10;        marshMellowHelper = MarshMellowHelper(this, arrayOf(Manifest.permission.WRITE_EXTERNAL_STORAGE, Manifest.permission.READ_EXTERNAL_STORAGE), PERMISSIONS_REQUEST_CODE)&#10;        marshMellowHelper!!.request(object : MarshMellowHelper.PermissionCallback {&#10;            override fun onPermissionGranted() {&#10;                //code here&#10;                getAllShownImagesPath(activity!!)&#10;                mAdapter?.notifyDataSetChanged()&#10;            }&#10;&#10;            override fun onPermissionDenied() {&#10;&#10;            }&#10;&#10;            override fun onPermissionDeniedBySystem() {&#10;&#10;            }&#10;        })&#10;    } &#10; &#10; @SuppressLint(&quot;Recycle&quot;)&#10;    private fun getAllShownImagesPath(activity: Activity): ArrayList&lt;$DataList$&gt; {&#10;        mArrayList.clear()&#10;        var absolutePathOfImage: String? = null&#10;        val uri = MediaStore.Images.Media.EXTERNAL_CONTENT_URI&#10;        val projection = arrayOf(MediaColumns.DATA, MediaStore.Images.Media.BUCKET_DISPLAY_NAME)&#10;        val cursor = activity.contentResolver.query(uri, projection, null, null, null)&#10;        val columnIndexData = cursor!!.getColumnIndexOrThrow(MediaColumns.DATA)&#10;        while (cursor.moveToNext()) {&#10;            absolutePathOfImage = cursor.getString(columnIndexData)&#10;            mArrayList.add($DataList$(cursor.position.toString(), absolutePathOfImage))&#10;        }&#10;        return mArrayList&#10;    }&#10;    &#10;     override fun onRequestPermissionsResult(requestCode: Int, permissions: Array&lt;String&gt;, grantResults: IntArray) {&#10;        super.onRequestPermissionsResult(requestCode, permissions, grantResults)&#10;        if (marshMellowHelper != null) {&#10;            marshMellowHelper!!.onRequestPermissionsResult(requestCode, permissions, grantResults)&#10;        }&#10;    }" description="Getting Image Gallery with permission" toReformat="false" toShortenFQNames="true">
    <variable name="DataList" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="ImageGettingGallery" value="@SuppressLint(&quot;Recycle&quot;)&#10;private fun get$AllShownImagesPath$(activity: Activity): ArrayList&lt;$DataList$&gt; {&#10;    mArrayList.clear()&#10;    var absolutePathOfImage: String? = null&#10;    val uri = MediaStore.Images.Media.EXTERNAL_CONTENT_URI&#10;    val projection = arrayOf(MediaColumns.DATA, MediaStore.Images.Media.BUCKET_DISPLAY_NAME)&#10;    val cursor = activity.contentResolver.query(uri, projection, null, null, null)&#10;    val columnIndexData = cursor!!.getColumnIndexOrThrow(MediaColumns.DATA)&#10;    while (cursor.moveToNext()) {&#10;        absolutePathOfImage = cursor.getString(columnIndexData)&#10;        mArrayList.add($DataList$(cursor.position.toString(), absolutePathOfImage))&#10;    }&#10;    return mArrayList&#10;}" description="Getting Image Gallery with permission" toReformat="false" toShortenFQNames="true">
    <variable name="AllShownImagesPath" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="DataList" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="GlideFragment" value="Glide.with(context!!).load($mArrayList$).into($img_selected_image$)" description="Glide Fragment" toReformat="false" toShortenFQNames="true">
    <variable name="mArrayList" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="img_selected_image" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="Pagination" value="private var layoutManager: LinearLayoutManager? = null&#10;private var pastVisibleItems: Int = -1&#10;private var visibleItemCount: Int = -1&#10;private var totalItemCount: Int = -1&#10;&#10;$rv_dashboard$.addOnScrollListener(object : RecyclerView.OnScrollListener() {&#10;&#9;override fun onScrolled(recyclerView: RecyclerView, dx: Int, dy: Int) {&#10;        super.onScrolled(recyclerView, dx, dy)&#10;        visibleItemCount = layoutManager!!.childCount&#10;        totalItemCount = layoutManager!!.itemCount&#10;        pastVisibleItems = layoutManager!!.findFirstVisibleItemPosition()&#10;        if (visibleItemCount + pastVisibleItems &gt;= totalItemCount) {&#10;            //code here&#10;        }                &#10;    }&#10;&#10;    override fun onScrollStateChanged(recyclerView: RecyclerView, newState: Int) {&#10;        super.onScrollStateChanged(recyclerView, newState)&#10;    }&#10;})" description="" toReformat="false" toShortenFQNames="true">
    <variable name="rv_dashboard" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="ThreadSplash" value="Handler().postDelayed(Runnable {&#10;        //code here    &#10;},3000)" description="Thread" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="GradleImageCropper" value="//cropper&#10;implementation 'com.fenchtose.nocropper:nocropper:0.3.0'" description="image crop" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="GROOVY" value="true" />
    </context>
  </template>
  <template name="GradleGson" value="//Gson&#10;implementation 'com.google.code.gson:gson:2.8.5'" description="GSON" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="GROOVY" value="true" />
    </context>
  </template>
  <template name="DisplayHeightWidth" value="val displayMetrics = DisplayMetrics()&#10;activity!!.windowManager.defaultDisplay.getMetrics(displayMetrics)&#10;val height = displayMetrics.heightPixels&#10;val width = displayMetrics.widthPixels" description="get the display height or width" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="GetBitmapSize" value="Log.d(Constant.Tag, &quot;mBitmapSize--&gt;${$resource$.byteCount / 1024}&quot;)" description="get Bitmap Size in Kilobytes" toReformat="false" toShortenFQNames="true">
    <variable name="resource" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="LayoutAutoScaleImageView" value="&lt;androidx.constraintlayout.widget.ConstraintLayout&#10;    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:id=&quot;@+id/cl_main&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:layout_margin=&quot;@dimen/dp_3&quot;&gt;&#10;&#10;   &lt;androidx.appcompat.widget.AppCompatImageView&#10;        android:id=&quot;@+id/img_$gallery$&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;0dp&quot;&#10;        android:scaleType=&quot;centerCrop&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;        app:layout_constraintDimensionRatio=&quot;H,1:1&quot;&#10;        app:layout_constraintLeft_toLeftOf=&quot;parent&quot;&#10;        app:layout_constraintRight_toRightOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot;&#10;        tools:src=&quot;@tools:sample/avatars&quot; /&gt;&#10;&#10;&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;" description="Image View Auto Scale according to display size" toReformat="true" toShortenFQNames="true">
    <variable name="gallery" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="XML" value="true" />
    </context>
  </template>
  <template name="LayoutAutoScaleImageViewOnly" value="&lt;androidx.appcompat.widget.AppCompatImageView&#10;     android:id=&quot;@+id/img_$gallery$&quot;&#10;     android:layout_width=&quot;match_parent&quot;&#10;     android:layout_height=&quot;0dp&quot;&#10;     android:scaleType=&quot;centerCrop&quot;&#10;     app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;     app:layout_constraintDimensionRatio=&quot;H,1:1&quot;&#10;     app:layout_constraintLeft_toLeftOf=&quot;parent&quot;&#10;     app:layout_constraintRight_toRightOf=&quot;parent&quot;&#10;     app:layout_constraintTop_toTopOf=&quot;parent&quot;&#10;     tools:src=&quot;@tools:sample/avatars&quot; /&gt;" description="only Image View Auto Scale according to display size" toReformat="true" toShortenFQNames="true">
    <variable name="gallery" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="XML" value="true" />
    </context>
  </template>
  <template name="DrawableRectangle" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;       android:shape=&quot;rectangle&quot;&gt;&#10;    &lt;solid android:color=&quot;#FFFFFF&quot;/&gt;&#10;    &lt;stroke&#10;        android:width=&quot;3dp&quot;&#10;        android:color=&quot;#0FECFF&quot;/&gt;&#10;    &lt;padding&#10;        android:bottom=&quot;5dp&quot;&#10;        android:left=&quot;5dp&quot;&#10;        android:right=&quot;5dp&quot;&#10;        android:top=&quot;5dp&quot;/&gt;&#10;    &lt;corners&#10;        android:bottomLeftRadius=&quot;7dp&quot;&#10;        android:bottomRightRadius=&quot;7dp&quot;&#10;        android:topLeftRadius=&quot;7dp&quot;&#10;        android:topRightRadius=&quot;7dp&quot;/&gt;&#10;&lt;/shape&gt;" description="Rectangle Drawable" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="XML" value="true" />
    </context>
  </template>
  <template name="CameraIntent" value="private var mCameraImageUri: Uri? = null&#10;private val REQUEST_CAMERA = 0&#10;private var imagePath: String? = null&#10;&#10;private fun cameraIntent() {&#10;    val values = ContentValues()&#10;    values.put( &quot;title&quot;, System.currentTimeMillis().toString() + resources.getString(R.string.app_name) + &quot;image&quot;)&#10;    mCameraImageUri = activity!!.contentResolver.insert(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, values)&#10;    val intentCamera = Intent(&quot;android.media.action.IMAGE_CAPTURE&quot;)&#10;    intentCamera.putExtra( &quot;output&quot;, mCameraImageUri)&#10;    startActivityForResult(intentCamera, REQUEST_CAMERA)&#10;}&#10;&#10;/**&#10; * getting result and set the arrayList and call adapter&#10; */&#10;@SuppressLint(&quot;NewApi&quot;)&#10;override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {&#10;    super.onActivityResult(requestCode, resultCode, data)&#10;    if (requestCode == REQUEST_CAMERA) run {&#10;        if (mCameraImageUri != null) {&#10;            //                Glide.with(activity!!).load(mCameraImageUri).apply(RequestOptions.circleCropTransform().error(R.mipmap.ic_launcher_round)).into(img_UserProfile_ReportList_UpdateFragment)&#10;            try {&#10;                imagePath = PathUtil.getPath(context!!, mCameraImageUri!!)&#10;                Log.d(Constant.Tag, &quot;camera imagePath --&gt;$imagePath&quot;)&#10;            } catch (e: URISyntaxException) {&#10;                e.printStackTrace()&#10;            }&#10;        }&#10;    }&#10;}&#10;" description="open the camera" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="EventBusinit" value="override fun onStart() {&#10;    super.onStart()&#10;    EventBus.getDefault().register(this)&#10;}&#10;&#10;override fun onStop() {&#10;    super.onStop()&#10;    EventBus.getDefault().unregister(this)&#10;}&#10;&#10;@Subscribe(threadMode = ThreadMode.MAIN)&#10;fun on$Caption$Event(event: $CaptionEvent$) {&#10;    //code here&#10;}" description="init the EventBus" toReformat="false" toShortenFQNames="true">
    <variable name="Caption" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="CaptionEvent" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="EventBusImplement" value="EventBus.getDefault().post($MessageEvent$())" description="init the EventBus" toReformat="false" toShortenFQNames="true">
    <variable name="MessageEvent" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="ConstraintLayoutTopBottom" value="app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;app:layout_constraintTop_toBottomOf=&quot;@id/$tb_web_view$&quot;" description="" toReformat="false" toShortenFQNames="true">
    <variable name="tb_web_view" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="XML" value="true" />
    </context>
  </template>
  <template name="ConstraintLayoutTopBottomOnly" value="app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;app:layout_constraintTop_toBottomOf=&quot;@id/$tb_web_view$&quot;" description="" toReformat="false" toShortenFQNames="true">
    <variable name="tb_web_view" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="XML" value="true" />
    </context>
  </template>
  <template name="onClick" value="fun onClick(view: View) {&#10;    val activity=view.getParentActivity()!!&#10;    when (view.id) {&#10;        &#10;    }&#10;}" description="MVVM onclick" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="Inflater" value="return inflater.inflate(R.layout.$bottom_sheet_web_view_browser$, container, false)" description="" toReformat="false" toShortenFQNames="true">
    <variable name="bottom_sheet_web_view_browser" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="ContextCompatGetColor" value="ContextCompat.getColor(context!!,R.color.$transparent$)" description="" toReformat="false" toShortenFQNames="true">
    <variable name="transparent" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="ImageView" value="&lt;androidx.appcompat.widget.AppCompatImageView&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot;&#10;        app:srcCompat=&quot;$enters$&quot; /&gt;" description="common ImageView" toReformat="false" toShortenFQNames="true">
    <variable name="enters" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="XML" value="true" />
    </context>
  </template>
  <template name="resources.getString" value="resources.getString(R.string.$tb_settings$)" description="" toReformat="false" toShortenFQNames="true">
    <variable name="tb_settings" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="TextView" value="&lt;androidx.appcompat.widget.AppCompatTextView&#10;android:id=&quot;@+id/txt_$name$&quot;&#10;android:layout_width=&quot;wrap_content&quot;&#10;android:layout_height=&quot;wrap_content&quot;&#10;android:text=&quot;$name$&quot;&#10;app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;app:layout_constraintLeft_toLeftOf=&quot;parent&quot;&#10;app:layout_constraintRight_toRightOf=&quot;parent&quot;&#10;app:layout_constraintTop_toTopOf=&quot;parent&quot;/&gt;" description="textView" toReformat="false" toShortenFQNames="true">
    <variable name="name" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="XML" value="true" />
    </context>
  </template>
  <template name="EditText" value="&lt;androidx.appcompat.widget.AppCompatEditText&#10;android:id=&quot;@+id/edt_$name$&quot;&#10;android:layout_width=&quot;wrap_content&quot;&#10;android:layout_height=&quot;wrap_content&quot;&#10;android:hint=&quot;@string/$app_name$&quot;&#10;app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;app:layout_constraintLeft_toLeftOf=&quot;parent&quot;&#10;app:layout_constraintRight_toRightOf=&quot;parent&quot;&#10;app:layout_constraintTop_toTopOf=&quot;parent&quot;/&gt;" description="EdittextView" toReformat="false" toShortenFQNames="true">
    <variable name="name" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="app_name" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="XML" value="true" />
    </context>
  </template>
  <template name="Button" value="&lt;androidx.appcompat.widget.AppCompatButton&#10;android:id=&quot;@+id/btn_$name$&quot;&#10;android:layout_width=&quot;wrap_content&quot;&#10;android:layout_height=&quot;wrap_content&quot;&#10;android:hint=&quot;@string/$app_name$&quot;&#10;app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;app:layout_constraintLeft_toLeftOf=&quot;parent&quot;&#10;app:layout_constraintRight_toRightOf=&quot;parent&quot;&#10;app:layout_constraintTop_toTopOf=&quot;parent&quot;/&gt;" description="EdittextView" toReformat="false" toShortenFQNames="true">
    <variable name="name" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="app_name" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="XML" value="true" />
    </context>
  </template>
  <template name="View" value="&lt;View&#10;            android:id=&quot;@+id/$divider$&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;1dp&quot;&#10;            android:background=&quot;@color/$side_menu_divider$&quot;&#10;            app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;            app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;            app:layout_constraintStart_toStartOf=&quot;parent&quot; /&gt;" description="View Divider" toReformat="false" toShortenFQNames="true">
    <variable name="divider" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="side_menu_divider" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="XML" value="true" />
    </context>
  </template>
</templateSet>